// <auto-generated />
using System;
using System.Collections.Generic;
using System.Reflection;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace gip.mes.datamodel
{
    internal partial class PartslistPosRelationEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "gip.mes.datamodel.PartslistPosRelation",
                typeof(PartslistPosRelation),
                baseEntityType,
                indexerPropertyInfo: RuntimeEntityType.FindIndexerProperty(typeof(PartslistPosRelation)));

            var partslistPosRelationID = runtimeEntityType.AddProperty(
                "PartslistPosRelationID",
                typeof(Guid),
                propertyInfo: typeof(PartslistPosRelation).GetProperty("PartslistPosRelationID", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PartslistPosRelation).GetField("_PartslistPosRelationID", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                afterSaveBehavior: PropertySaveBehavior.Throw);
            partslistPosRelationID.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var anterograde = runtimeEntityType.AddProperty(
                "Anterograde",
                typeof(bool?),
                propertyInfo: typeof(PartslistPosRelation).GetProperty("Anterograde", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PartslistPosRelation).GetField("_Anterograde", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            anterograde.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var materialWFRelationID = runtimeEntityType.AddProperty(
                "MaterialWFRelationID",
                typeof(Guid?),
                propertyInfo: typeof(PartslistPosRelation).GetProperty("MaterialWFRelationID", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PartslistPosRelation).GetField("_MaterialWFRelationID", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            materialWFRelationID.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var retrogradeFIFO = runtimeEntityType.AddProperty(
                "RetrogradeFIFO",
                typeof(bool?),
                propertyInfo: typeof(PartslistPosRelation).GetProperty("RetrogradeFIFO", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PartslistPosRelation).GetField("_RetrogradeFIFO", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            retrogradeFIFO.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var sequence = runtimeEntityType.AddProperty(
                "Sequence",
                typeof(int),
                propertyInfo: typeof(PartslistPosRelation).GetProperty("Sequence", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PartslistPosRelation).GetField("_Sequence", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));
            sequence.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var sourcePartslistPosID = runtimeEntityType.AddProperty(
                "SourcePartslistPosID",
                typeof(Guid),
                propertyInfo: typeof(PartslistPosRelation).GetProperty("SourcePartslistPosID", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PartslistPosRelation).GetField("_SourcePartslistPosID", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));
            sourcePartslistPosID.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var targetPartslistPosID = runtimeEntityType.AddProperty(
                "TargetPartslistPosID",
                typeof(Guid),
                propertyInfo: typeof(PartslistPosRelation).GetProperty("TargetPartslistPosID", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PartslistPosRelation).GetField("_TargetPartslistPosID", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));
            targetPartslistPosID.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var targetQuantity = runtimeEntityType.AddProperty(
                "TargetQuantity",
                typeof(double),
                propertyInfo: typeof(PartslistPosRelation).GetProperty("TargetQuantity", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PartslistPosRelation).GetField("_TargetQuantity", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));
            targetQuantity.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var targetQuantityUOM = runtimeEntityType.AddProperty(
                "TargetQuantityUOM",
                typeof(double),
                propertyInfo: typeof(PartslistPosRelation).GetProperty("TargetQuantityUOM", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PartslistPosRelation).GetField("_TargetQuantityUOM", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));
            targetQuantityUOM.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var lazyLoader = runtimeEntityType.AddServiceProperty(
                "LazyLoader",
                propertyInfo: typeof(PartslistPosRelation).GetProperty("LazyLoader", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var key = runtimeEntityType.AddKey(
                new[] { partslistPosRelationID });
            runtimeEntityType.SetPrimaryKey(key);

            var nCIFKPartslistPosRelationMaterialWFRelationID = runtimeEntityType.AddIndex(
                new[] { materialWFRelationID },
                name: "NCI_FK_PartslistPosRelation_MaterialWFRelationID");

            var nCIFKPartslistPosRelationSourcePartslistPosID = runtimeEntityType.AddIndex(
                new[] { sourcePartslistPosID },
                name: "NCI_FK_PartslistPosRelation_SourcePartslistPosID");

            var nCIFKPartslistPosRelationTargetPartslistPosID = runtimeEntityType.AddIndex(
                new[] { targetPartslistPosID },
                name: "NCI_FK_PartslistPosRelation_TargetPartslistPosID");

            return runtimeEntityType;
        }

        public static RuntimeForeignKey CreateForeignKey1(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("MaterialWFRelationID") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("MaterialWFRelationID") }),
                principalEntityType);

            var materialWFRelation = declaringEntityType.AddNavigation("MaterialWFRelation",
                runtimeForeignKey,
                onDependent: true,
                typeof(MaterialWFRelation),
                propertyInfo: typeof(PartslistPosRelation).GetProperty("MaterialWFRelation", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PartslistPosRelation).GetField("_MaterialWFRelation", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                propertyAccessMode: PropertyAccessMode.Field);

            var partslistPosRelationMaterialWFRelation = principalEntityType.AddNavigation("PartslistPosRelation_MaterialWFRelation",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<PartslistPosRelation>),
                propertyInfo: typeof(MaterialWFRelation).GetProperty("PartslistPosRelation_MaterialWFRelation", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(MaterialWFRelation).GetField("_PartslistPosRelation_MaterialWFRelation", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                propertyAccessMode: PropertyAccessMode.Field);

            runtimeForeignKey.AddAnnotation("Relational:Name", "FK_PartslistPosRelation_MaterialWFRelation");
            return runtimeForeignKey;
        }

        public static RuntimeForeignKey CreateForeignKey2(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("SourcePartslistPosID") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("PartslistPosID") }),
                principalEntityType,
                required: true);

            var sourcePartslistPos = declaringEntityType.AddNavigation("SourcePartslistPos",
                runtimeForeignKey,
                onDependent: true,
                typeof(PartslistPos),
                propertyInfo: typeof(PartslistPosRelation).GetProperty("SourcePartslistPos", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PartslistPosRelation).GetField("_SourcePartslistPos", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                propertyAccessMode: PropertyAccessMode.Field);

            var partslistPosRelationSourcePartslistPos = principalEntityType.AddNavigation("PartslistPosRelation_SourcePartslistPos",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<PartslistPosRelation>),
                propertyInfo: typeof(PartslistPos).GetProperty("PartslistPosRelation_SourcePartslistPos", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PartslistPos).GetField("_PartslistPosRelation_SourcePartslistPos", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                propertyAccessMode: PropertyAccessMode.Field);

            runtimeForeignKey.AddAnnotation("Relational:Name", "FK_PartslistPosRelation_PartslistPos1");
            return runtimeForeignKey;
        }

        public static RuntimeForeignKey CreateForeignKey3(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("TargetPartslistPosID") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("PartslistPosID") }),
                principalEntityType,
                required: true);

            var targetPartslistPos = declaringEntityType.AddNavigation("TargetPartslistPos",
                runtimeForeignKey,
                onDependent: true,
                typeof(PartslistPos),
                propertyInfo: typeof(PartslistPosRelation).GetProperty("TargetPartslistPos", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PartslistPosRelation).GetField("_TargetPartslistPos", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                propertyAccessMode: PropertyAccessMode.Field);

            var partslistPosRelationTargetPartslistPos = principalEntityType.AddNavigation("PartslistPosRelation_TargetPartslistPos",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<PartslistPosRelation>),
                propertyInfo: typeof(PartslistPos).GetProperty("PartslistPosRelation_TargetPartslistPos", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PartslistPos).GetField("_PartslistPosRelation_TargetPartslistPos", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                propertyAccessMode: PropertyAccessMode.Field);

            runtimeForeignKey.AddAnnotation("Relational:Name", "FK_PartslistPosRelation_PartslistPos");
            return runtimeForeignKey;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", null);
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "PartslistPosRelation");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
