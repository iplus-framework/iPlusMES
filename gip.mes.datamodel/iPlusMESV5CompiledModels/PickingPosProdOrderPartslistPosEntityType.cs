// <auto-generated />
using System;
using System.Collections.Generic;
using System.Reflection;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace gip.mes.datamodel
{
    internal partial class PickingPosProdOrderPartslistPosEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "gip.mes.datamodel.PickingPosProdOrderPartslistPos",
                typeof(PickingPosProdOrderPartslistPos),
                baseEntityType,
                indexerPropertyInfo: RuntimeEntityType.FindIndexerProperty(typeof(PickingPosProdOrderPartslistPos)));

            var pickingPosProdOrderPartslistPosID = runtimeEntityType.AddProperty(
                "PickingPosProdOrderPartslistPosID",
                typeof(Guid),
                propertyInfo: typeof(PickingPosProdOrderPartslistPos).GetProperty("PickingPosProdOrderPartslistPosID", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PickingPosProdOrderPartslistPos).GetField("_PickingPosProdOrderPartslistPosID", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                afterSaveBehavior: PropertySaveBehavior.Throw);
            pickingPosProdOrderPartslistPosID.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var pickingPosID = runtimeEntityType.AddProperty(
                "PickingPosID",
                typeof(Guid),
                propertyInfo: typeof(PickingPosProdOrderPartslistPos).GetProperty("PickingPosID", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PickingPosProdOrderPartslistPos).GetField("_PickingPosID", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));
            pickingPosID.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var prodorderPartslistPosID = runtimeEntityType.AddProperty(
                "ProdorderPartslistPosID",
                typeof(Guid),
                propertyInfo: typeof(PickingPosProdOrderPartslistPos).GetProperty("ProdorderPartslistPosID", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PickingPosProdOrderPartslistPos).GetField("_ProdorderPartslistPosID", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));
            prodorderPartslistPosID.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var lazyLoader = runtimeEntityType.AddServiceProperty(
                "LazyLoader",
                propertyInfo: typeof(PickingPosProdOrderPartslistPos).GetProperty("LazyLoader", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var key = runtimeEntityType.AddKey(
                new[] { pickingPosProdOrderPartslistPosID });
            runtimeEntityType.SetPrimaryKey(key);

            var index = runtimeEntityType.AddIndex(
                new[] { prodorderPartslistPosID });

            var pickingPosProdorderPartslistPos = runtimeEntityType.AddIndex(
                new[] { pickingPosID, prodorderPartslistPosID },
                name: "PickingPos_ProdorderPartslistPos",
                unique: true);

            return runtimeEntityType;
        }

        public static RuntimeForeignKey CreateForeignKey1(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("PickingPosID") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("PickingPosID") }),
                principalEntityType,
                required: true);

            var pickingPos = declaringEntityType.AddNavigation("PickingPos",
                runtimeForeignKey,
                onDependent: true,
                typeof(PickingPos),
                propertyInfo: typeof(PickingPosProdOrderPartslistPos).GetProperty("PickingPos", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PickingPosProdOrderPartslistPos).GetField("_PickingPos", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                propertyAccessMode: PropertyAccessMode.Field);

            var pickingPosProdOrderPartslistPosPickingPos = principalEntityType.AddNavigation("PickingPosProdOrderPartslistPos_PickingPos",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<PickingPosProdOrderPartslistPos>),
                propertyInfo: typeof(PickingPos).GetProperty("PickingPosProdOrderPartslistPos_PickingPos", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PickingPos).GetField("_PickingPosProdOrderPartslistPos_PickingPos", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                propertyAccessMode: PropertyAccessMode.Field);

            runtimeForeignKey.AddAnnotation("Relational:Name", "FK_PickingPosProdOrderPartslistPos_PickingPos");
            return runtimeForeignKey;
        }

        public static RuntimeForeignKey CreateForeignKey2(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("ProdorderPartslistPosID") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("ProdOrderPartslistPosID") }),
                principalEntityType,
                required: true);

            var prodorderPartslistPos = declaringEntityType.AddNavigation("ProdorderPartslistPos",
                runtimeForeignKey,
                onDependent: true,
                typeof(ProdOrderPartslistPos),
                propertyInfo: typeof(PickingPosProdOrderPartslistPos).GetProperty("ProdorderPartslistPos", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PickingPosProdOrderPartslistPos).GetField("_ProdorderPartslistPos", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                propertyAccessMode: PropertyAccessMode.Field);

            var pickingPosProdOrderPartslistPosProdorderPartslistPos = principalEntityType.AddNavigation("PickingPosProdOrderPartslistPos_ProdorderPartslistPos",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<PickingPosProdOrderPartslistPos>),
                propertyInfo: typeof(ProdOrderPartslistPos).GetProperty("PickingPosProdOrderPartslistPos_ProdorderPartslistPos", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ProdOrderPartslistPos).GetField("_PickingPosProdOrderPartslistPos_ProdorderPartslistPos", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                propertyAccessMode: PropertyAccessMode.Field);

            runtimeForeignKey.AddAnnotation("Relational:Name", "FK_PickingPosProdOrderPartslistPos_ProdorderPartslistPos");
            return runtimeForeignKey;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", null);
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "PickingPosProdOrderPartslistPos");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
