// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace gip.mes.datamodel
{
    public partial class iPlusMESV5ContextModel
    {
        private iPlusMESV5ContextModel()
            : base(skipDetectChanges: true, modelId: new Guid("90ed829c-1acb-487f-938c-c04746cb4b3b"), entityTypeCount: 255)
        {
        }

        partial void Initialize()
        {
            var aCAssembly = ACAssemblyEntityType.Create(this);
            var aCChangeLog = ACChangeLogEntityType.Create(this);
            var aCClass = ACClassEntityType.Create(this);
            var aCClassConfig = ACClassConfigEntityType.Create(this);
            var aCClassDesign = ACClassDesignEntityType.Create(this);
            var aCClassMessage = ACClassMessageEntityType.Create(this);
            var aCClassMethod = ACClassMethodEntityType.Create(this);
            var aCClassMethodConfig = ACClassMethodConfigEntityType.Create(this);
            var aCClassProperty = ACClassPropertyEntityType.Create(this);
            var aCClassPropertyRelation = ACClassPropertyRelationEntityType.Create(this);
            var aCClassRouteUsage = ACClassRouteUsageEntityType.Create(this);
            var aCClassRouteUsageGroup = ACClassRouteUsageGroupEntityType.Create(this);
            var aCClassRouteUsagePos = ACClassRouteUsagePosEntityType.Create(this);
            var aCClassTask = ACClassTaskEntityType.Create(this);
            var aCClassTaskValue = ACClassTaskValueEntityType.Create(this);
            var aCClassTaskValuePos = ACClassTaskValuePosEntityType.Create(this);
            var aCClassText = ACClassTextEntityType.Create(this);
            var aCClassWF = ACClassWFEntityType.Create(this);
            var aCClassWFEdge = ACClassWFEdgeEntityType.Create(this);
            var aCPackage = ACPackageEntityType.Create(this);
            var aCProgram = ACProgramEntityType.Create(this);
            var aCProgramConfig = ACProgramConfigEntityType.Create(this);
            var aCProgramLog = ACProgramLogEntityType.Create(this);
            var aCProgramLogPropertyLog = ACProgramLogPropertyLogEntityType.Create(this);
            var aCProgramLogTask = ACProgramLogTaskEntityType.Create(this);
            var aCProgramLogView = ACProgramLogViewEntityType.Create(this);
            var aCProject = ACProjectEntityType.Create(this);
            var aCPropertyLog = ACPropertyLogEntityType.Create(this);
            var aCPropertyLogRule = ACPropertyLogRuleEntityType.Create(this);
            var calendar = CalendarEntityType.Create(this);
            var calendarHoliday = CalendarHolidayEntityType.Create(this);
            var calendarShift = CalendarShiftEntityType.Create(this);
            var calendarShiftPerson = CalendarShiftPersonEntityType.Create(this);
            var company = CompanyEntityType.Create(this);
            var companyAddress = CompanyAddressEntityType.Create(this);
            var companyAddressDepartment = CompanyAddressDepartmentEntityType.Create(this);
            var companyAddressUnloadingpoint = CompanyAddressUnloadingpointEntityType.Create(this);
            var companyMaterial = CompanyMaterialEntityType.Create(this);
            var companyMaterialHistory = CompanyMaterialHistoryEntityType.Create(this);
            var companyMaterialPickup = CompanyMaterialPickupEntityType.Create(this);
            var companyMaterialStock = CompanyMaterialStockEntityType.Create(this);
            var companyPerson = CompanyPersonEntityType.Create(this);
            var companyPersonRole = CompanyPersonRoleEntityType.Create(this);
            var deliveryNote = DeliveryNoteEntityType.Create(this);
            var deliveryNotePos = DeliveryNotePosEntityType.Create(this);
            var demandOrder = DemandOrderEntityType.Create(this);
            var demandOrderPos = DemandOrderPosEntityType.Create(this);
            var demandPrimary = DemandPrimaryEntityType.Create(this);
            var demandProdOrder = DemandProdOrderEntityType.Create(this);
            var facility = FacilityEntityType.Create(this);
            var facilityBooking = FacilityBookingEntityType.Create(this);
            var facilityBookingCharge = FacilityBookingChargeEntityType.Create(this);
            var facilityCharge = FacilityChargeEntityType.Create(this);
            var facilityHistory = FacilityHistoryEntityType.Create(this);
            var facilityInventory = FacilityInventoryEntityType.Create(this);
            var facilityInventoryPos = FacilityInventoryPosEntityType.Create(this);
            var facilityLot = FacilityLotEntityType.Create(this);
            var facilityLotStock = FacilityLotStockEntityType.Create(this);
            var facilityMDSchedulingGroup = FacilityMDSchedulingGroupEntityType.Create(this);
            var facilityMaterial = FacilityMaterialEntityType.Create(this);
            var facilityMaterialOEE = FacilityMaterialOEEEntityType.Create(this);
            var facilityPreBooking = FacilityPreBookingEntityType.Create(this);
            var facilityReservation = FacilityReservationEntityType.Create(this);
            var facilityStock = FacilityStockEntityType.Create(this);
            var history = HistoryEntityType.Create(this);
            var historyConfig = HistoryConfigEntityType.Create(this);
            var inOrder = InOrderEntityType.Create(this);
            var inOrderConfig = InOrderConfigEntityType.Create(this);
            var inOrderPos = InOrderPosEntityType.Create(this);
            var inOrderPosSplit = InOrderPosSplitEntityType.Create(this);
            var inRequest = InRequestEntityType.Create(this);
            var inRequestConfig = InRequestConfigEntityType.Create(this);
            var inRequestPos = InRequestPosEntityType.Create(this);
            var invoice = InvoiceEntityType.Create(this);
            var invoicePos = InvoicePosEntityType.Create(this);
            var jobTableRecalcActualQuantity = JobTableRecalcActualQuantityEntityType.Create(this);
            var labOrder = LabOrderEntityType.Create(this);
            var labOrderPos = LabOrderPosEntityType.Create(this);
            var label = LabelEntityType.Create(this);
            var labelTranslation = LabelTranslationEntityType.Create(this);
            var mDBalancingMode = MDBalancingModeEntityType.Create(this);
            var mDBatchPlanGroup = MDBatchPlanGroupEntityType.Create(this);
            var mDBookingNotAvailableMode = MDBookingNotAvailableModeEntityType.Create(this);
            var mDCostCenter = MDCostCenterEntityType.Create(this);
            var mDCountry = MDCountryEntityType.Create(this);
            var mDCountryLand = MDCountryLandEntityType.Create(this);
            var mDCountrySalesTax = MDCountrySalesTaxEntityType.Create(this);
            var mDCountrySalesTaxMDMaterialGroup = MDCountrySalesTaxMDMaterialGroupEntityType.Create(this);
            var mDCountrySalesTaxMaterial = MDCountrySalesTaxMaterialEntityType.Create(this);
            var mDCurrency = MDCurrencyEntityType.Create(this);
            var mDCurrencyExchange = MDCurrencyExchangeEntityType.Create(this);
            var mDDelivNoteState = MDDelivNoteStateEntityType.Create(this);
            var mDDelivPosLoadState = MDDelivPosLoadStateEntityType.Create(this);
            var mDDelivPosState = MDDelivPosStateEntityType.Create(this);
            var mDDelivType = MDDelivTypeEntityType.Create(this);
            var mDDemandOrderState = MDDemandOrderStateEntityType.Create(this);
            var mDFacilityInventoryPosState = MDFacilityInventoryPosStateEntityType.Create(this);
            var mDFacilityInventoryState = MDFacilityInventoryStateEntityType.Create(this);
            var mDFacilityManagementType = MDFacilityManagementTypeEntityType.Create(this);
            var mDFacilityType = MDFacilityTypeEntityType.Create(this);
            var mDFacilityVehicleType = MDFacilityVehicleTypeEntityType.Create(this);
            var mDGMPAdditive = MDGMPAdditiveEntityType.Create(this);
            var mDGMPMaterialGroup = MDGMPMaterialGroupEntityType.Create(this);
            var mDGMPMaterialGroupPos = MDGMPMaterialGroupPosEntityType.Create(this);
            var mDInOrderPosState = MDInOrderPosStateEntityType.Create(this);
            var mDInOrderState = MDInOrderStateEntityType.Create(this);
            var mDInOrderType = MDInOrderTypeEntityType.Create(this);
            var mDInRequestState = MDInRequestStateEntityType.Create(this);
            var mDInventoryManagementType = MDInventoryManagementTypeEntityType.Create(this);
            var mDInvoiceState = MDInvoiceStateEntityType.Create(this);
            var mDInvoiceType = MDInvoiceTypeEntityType.Create(this);
            var mDLabOrderPosState = MDLabOrderPosStateEntityType.Create(this);
            var mDLabOrderState = MDLabOrderStateEntityType.Create(this);
            var mDLabTag = MDLabTagEntityType.Create(this);
            var mDMaintMode = MDMaintModeEntityType.Create(this);
            var mDMaintOrderPropertyState = MDMaintOrderPropertyStateEntityType.Create(this);
            var mDMaintOrderState = MDMaintOrderStateEntityType.Create(this);
            var mDMaintTaskState = MDMaintTaskStateEntityType.Create(this);
            var mDMaterialGroup = MDMaterialGroupEntityType.Create(this);
            var mDMaterialType = MDMaterialTypeEntityType.Create(this);
            var mDMovementReason = MDMovementReasonEntityType.Create(this);
            var mDOutOfferState = MDOutOfferStateEntityType.Create(this);
            var mDOutOrderPlanState = MDOutOrderPlanStateEntityType.Create(this);
            var mDOutOrderPosState = MDOutOrderPosStateEntityType.Create(this);
            var mDOutOrderState = MDOutOrderStateEntityType.Create(this);
            var mDOutOrderType = MDOutOrderTypeEntityType.Create(this);
            var mDPickingType = MDPickingTypeEntityType.Create(this);
            var mDProcessErrorAction = MDProcessErrorActionEntityType.Create(this);
            var mDProdOrderPartslistPosState = MDProdOrderPartslistPosStateEntityType.Create(this);
            var mDProdOrderState = MDProdOrderStateEntityType.Create(this);
            var mDRatingComplaintType = MDRatingComplaintTypeEntityType.Create(this);
            var mDReleaseState = MDReleaseStateEntityType.Create(this);
            var mDReservationMode = MDReservationModeEntityType.Create(this);
            var mDSchedulingGroup = MDSchedulingGroupEntityType.Create(this);
            var mDSchedulingGroupWF = MDSchedulingGroupWFEntityType.Create(this);
            var mDTermOfPayment = MDTermOfPaymentEntityType.Create(this);
            var mDTimeRange = MDTimeRangeEntityType.Create(this);
            var mDToleranceState = MDToleranceStateEntityType.Create(this);
            var mDTour = MDTourEntityType.Create(this);
            var mDTourplanPosState = MDTourplanPosStateEntityType.Create(this);
            var mDTourplanState = MDTourplanStateEntityType.Create(this);
            var mDTransportMode = MDTransportModeEntityType.Create(this);
            var mDUnit = MDUnitEntityType.Create(this);
            var mDUnitConversion = MDUnitConversionEntityType.Create(this);
            var mDVisitorCard = MDVisitorCardEntityType.Create(this);
            var mDVisitorCardState = MDVisitorCardStateEntityType.Create(this);
            var mDVisitorVoucherState = MDVisitorVoucherStateEntityType.Create(this);
            var mDZeroStockState = MDZeroStockStateEntityType.Create(this);
            var machineMaterialPosView = MachineMaterialPosViewEntityType.Create(this);
            var machineMaterialRelView = MachineMaterialRelViewEntityType.Create(this);
            var machineMaterialView = MachineMaterialViewEntityType.Create(this);
            var maintACClass = MaintACClassEntityType.Create(this);
            var maintACClassProperty = MaintACClassPropertyEntityType.Create(this);
            var maintOrder = MaintOrderEntityType.Create(this);
            var maintOrderAssignment = MaintOrderAssignmentEntityType.Create(this);
            var maintOrderPos = MaintOrderPosEntityType.Create(this);
            var maintOrderProperty = MaintOrderPropertyEntityType.Create(this);
            var maintOrderTask = MaintOrderTaskEntityType.Create(this);
            var material = MaterialEntityType.Create(this);
            var materialCalculation = MaterialCalculationEntityType.Create(this);
            var materialConfig = MaterialConfigEntityType.Create(this);
            var materialGMPAdditive = MaterialGMPAdditiveEntityType.Create(this);
            var materialHistory = MaterialHistoryEntityType.Create(this);
            var materialStock = MaterialStockEntityType.Create(this);
            var materialUnit = MaterialUnitEntityType.Create(this);
            var materialWF = MaterialWFEntityType.Create(this);
            var materialWFACClassMethod = MaterialWFACClassMethodEntityType.Create(this);
            var materialWFACClassMethodConfig = MaterialWFACClassMethodConfigEntityType.Create(this);
            var materialWFConnection = MaterialWFConnectionEntityType.Create(this);
            var materialWFRelation = MaterialWFRelationEntityType.Create(this);
            var msgAlarmLog = MsgAlarmLogEntityType.Create(this);
            var operationLog = OperationLogEntityType.Create(this);
            var orderLog = OrderLogEntityType.Create(this);
            var orderLogPosMachines = OrderLogPosMachinesEntityType.Create(this);
            var orderLogPosView = OrderLogPosViewEntityType.Create(this);
            var orderLogRelView = OrderLogRelViewEntityType.Create(this);
            var outOffer = OutOfferEntityType.Create(this);
            var outOfferConfig = OutOfferConfigEntityType.Create(this);
            var outOfferPos = OutOfferPosEntityType.Create(this);
            var outOrder = OutOrderEntityType.Create(this);
            var outOrderConfig = OutOrderConfigEntityType.Create(this);
            var outOrderPos = OutOrderPosEntityType.Create(this);
            var outOrderPosSplit = OutOrderPosSplitEntityType.Create(this);
            var outOrderPosUtilization = OutOrderPosUtilizationEntityType.Create(this);
            var partslist = PartslistEntityType.Create(this);
            var partslistACClassMethod = PartslistACClassMethodEntityType.Create(this);
            var partslistConfig = PartslistConfigEntityType.Create(this);
            var partslistPos = PartslistPosEntityType.Create(this);
            var partslistPosRelation = PartslistPosRelationEntityType.Create(this);
            var partslistPosSplit = PartslistPosSplitEntityType.Create(this);
            var partslistStock = PartslistStockEntityType.Create(this);
            var picking = PickingEntityType.Create(this);
            var pickingConfig = PickingConfigEntityType.Create(this);
            var pickingPos = PickingPosEntityType.Create(this);
            var pickingPosProdOrderPartslistPos = PickingPosProdOrderPartslistPosEntityType.Create(this);
            var planningMR = PlanningMREntityType.Create(this);
            var planningMRCons = PlanningMRConsEntityType.Create(this);
            var planningMRPos = PlanningMRPosEntityType.Create(this);
            var planningMRProposal = PlanningMRProposalEntityType.Create(this);
            var priceList = PriceListEntityType.Create(this);
            var priceListMaterial = PriceListMaterialEntityType.Create(this);
            var prodOrder = ProdOrderEntityType.Create(this);
            var prodOrderBatch = ProdOrderBatchEntityType.Create(this);
            var prodOrderBatchPlan = ProdOrderBatchPlanEntityType.Create(this);
            var prodOrderConnectionsDetailView = ProdOrderConnectionsDetailViewEntityType.Create(this);
            var prodOrderConnectionsView = ProdOrderConnectionsViewEntityType.Create(this);
            var prodOrderInwardsView = ProdOrderInwardsViewEntityType.Create(this);
            var prodOrderOutwardsView = ProdOrderOutwardsViewEntityType.Create(this);
            var prodOrderPartslist = ProdOrderPartslistEntityType.Create(this);
            var prodOrderPartslistConfig = ProdOrderPartslistConfigEntityType.Create(this);
            var prodOrderPartslistPos = ProdOrderPartslistPosEntityType.Create(this);
            var prodOrderPartslistPosFacilityLot = ProdOrderPartslistPosFacilityLotEntityType.Create(this);
            var prodOrderPartslistPosRelation = ProdOrderPartslistPosRelationEntityType.Create(this);
            var prodOrderPartslistPosSplit = ProdOrderPartslistPosSplitEntityType.Create(this);
            var rating = RatingEntityType.Create(this);
            var ratingComplaint = RatingComplaintEntityType.Create(this);
            var tandTv3FilterTracking = TandTv3FilterTrackingEntityType.Create(this);
            var tandTv3FilterTrackingMaterial = TandTv3FilterTrackingMaterialEntityType.Create(this);
            var tandTv3MDBookingDirection = TandTv3MDBookingDirectionEntityType.Create(this);
            var tandTv3MDTrackingDirection = TandTv3MDTrackingDirectionEntityType.Create(this);
            var tandTv3MDTrackingStartItemType = TandTv3MDTrackingStartItemTypeEntityType.Create(this);
            var tandTv3MixPoint = TandTv3MixPointEntityType.Create(this);
            var tandTv3MixPointDeliveryNotePos = TandTv3MixPointDeliveryNotePosEntityType.Create(this);
            var tandTv3MixPointFacility = TandTv3MixPointFacilityEntityType.Create(this);
            var tandTv3MixPointFacilityBookingCharge = TandTv3MixPointFacilityBookingChargeEntityType.Create(this);
            var tandTv3MixPointFacilityLot = TandTv3MixPointFacilityLotEntityType.Create(this);
            var tandTv3MixPointFacilityPreBooking = TandTv3MixPointFacilityPreBookingEntityType.Create(this);
            var tandTv3MixPointInOrderPos = TandTv3MixPointInOrderPosEntityType.Create(this);
            var tandTv3MixPointOutOrderPos = TandTv3MixPointOutOrderPosEntityType.Create(this);
            var tandTv3MixPointPickingPos = TandTv3MixPointPickingPosEntityType.Create(this);
            var tandTv3MixPointProdOrderPartslistPos = TandTv3MixPointProdOrderPartslistPosEntityType.Create(this);
            var tandTv3MixPointProdOrderPartslistPosRelation = TandTv3MixPointProdOrderPartslistPosRelationEntityType.Create(this);
            var tandTv3MixPointRelation = TandTv3MixPointRelationEntityType.Create(this);
            var tandTv3Step = TandTv3StepEntityType.Create(this);
            var tourplan = TourplanEntityType.Create(this);
            var tourplanConfig = TourplanConfigEntityType.Create(this);
            var tourplanPos = TourplanPosEntityType.Create(this);
            var userSettings = UserSettingsEntityType.Create(this);
            var vBConfig = VBConfigEntityType.Create(this);
            var vBGroup = VBGroupEntityType.Create(this);
            var vBGroupRight = VBGroupRightEntityType.Create(this);
            var vBLanguage = VBLanguageEntityType.Create(this);
            var vBLicense = VBLicenseEntityType.Create(this);
            var vBNoConfiguration = VBNoConfigurationEntityType.Create(this);
            var vBSystem = VBSystemEntityType.Create(this);
            var vBSystemColumns = VBSystemColumnsEntityType.Create(this);
            var vBTranslationView = VBTranslationViewEntityType.Create(this);
            var vBUser = VBUserEntityType.Create(this);
            var vBUserACClassDesign = VBUserACClassDesignEntityType.Create(this);
            var vBUserACProject = VBUserACProjectEntityType.Create(this);
            var vBUserGroup = VBUserGroupEntityType.Create(this);
            var vBUserInstance = VBUserInstanceEntityType.Create(this);
            var visitor = VisitorEntityType.Create(this);
            var visitorVoucher = VisitorVoucherEntityType.Create(this);
            var weighing = WeighingEntityType.Create(this);

            ACChangeLogEntityType.CreateForeignKey1(aCChangeLog, aCClass);
            ACChangeLogEntityType.CreateForeignKey2(aCChangeLog, aCClassProperty);
            ACChangeLogEntityType.CreateForeignKey3(aCChangeLog, vBUser);
            ACClassEntityType.CreateForeignKey1(aCClass, aCPackage);
            ACClassEntityType.CreateForeignKey2(aCClass, aCProject);
            ACClassEntityType.CreateForeignKey3(aCClass, aCClass);
            ACClassEntityType.CreateForeignKey4(aCClass, aCClass);
            ACClassEntityType.CreateForeignKey5(aCClass, aCClass);
            ACClassEntityType.CreateForeignKey6(aCClass, aCClass);
            ACClassConfigEntityType.CreateForeignKey1(aCClassConfig, aCClass);
            ACClassConfigEntityType.CreateForeignKey2(aCClassConfig, aCClassPropertyRelation);
            ACClassConfigEntityType.CreateForeignKey3(aCClassConfig, aCClassConfig);
            ACClassConfigEntityType.CreateForeignKey4(aCClassConfig, aCClass);
            ACClassDesignEntityType.CreateForeignKey1(aCClassDesign, aCClass);
            ACClassDesignEntityType.CreateForeignKey2(aCClassDesign, aCClass);
            ACClassMessageEntityType.CreateForeignKey1(aCClassMessage, aCClass);
            ACClassMethodEntityType.CreateForeignKey1(aCClassMethod, aCClass);
            ACClassMethodEntityType.CreateForeignKey2(aCClassMethod, aCClass);
            ACClassMethodEntityType.CreateForeignKey3(aCClassMethod, aCClass);
            ACClassMethodEntityType.CreateForeignKey4(aCClassMethod, aCClassMethod);
            ACClassMethodEntityType.CreateForeignKey5(aCClassMethod, aCClass);
            ACClassMethodConfigEntityType.CreateForeignKey1(aCClassMethodConfig, aCClassMethod);
            ACClassMethodConfigEntityType.CreateForeignKey2(aCClassMethodConfig, aCClassWF);
            ACClassMethodConfigEntityType.CreateForeignKey3(aCClassMethodConfig, aCClassMethodConfig);
            ACClassMethodConfigEntityType.CreateForeignKey4(aCClassMethodConfig, aCClass);
            ACClassMethodConfigEntityType.CreateForeignKey5(aCClassMethodConfig, aCClassPropertyRelation);
            ACClassMethodConfigEntityType.CreateForeignKey6(aCClassMethodConfig, aCClass);
            ACClassPropertyEntityType.CreateForeignKey1(aCClassProperty, aCClass);
            ACClassPropertyEntityType.CreateForeignKey2(aCClassProperty, aCClassProperty);
            ACClassPropertyEntityType.CreateForeignKey3(aCClassProperty, aCClass);
            ACClassPropertyEntityType.CreateForeignKey4(aCClassProperty, aCClassProperty);
            ACClassPropertyEntityType.CreateForeignKey5(aCClassProperty, aCClass);
            ACClassPropertyRelationEntityType.CreateForeignKey1(aCClassPropertyRelation, aCClass);
            ACClassPropertyRelationEntityType.CreateForeignKey2(aCClassPropertyRelation, aCClassProperty);
            ACClassPropertyRelationEntityType.CreateForeignKey3(aCClassPropertyRelation, aCClass);
            ACClassPropertyRelationEntityType.CreateForeignKey4(aCClassPropertyRelation, aCClassProperty);
            ACClassRouteUsageGroupEntityType.CreateForeignKey1(aCClassRouteUsageGroup, aCClassRouteUsage);
            ACClassRouteUsagePosEntityType.CreateForeignKey1(aCClassRouteUsagePos, aCClassRouteUsage);
            ACClassTaskEntityType.CreateForeignKey1(aCClassTask, aCProgram);
            ACClassTaskEntityType.CreateForeignKey2(aCClassTask, aCClassWF);
            ACClassTaskEntityType.CreateForeignKey3(aCClassTask, aCClassTask);
            ACClassTaskEntityType.CreateForeignKey4(aCClassTask, aCClass);
            ACClassTaskValueEntityType.CreateForeignKey1(aCClassTaskValue, aCClassProperty);
            ACClassTaskValueEntityType.CreateForeignKey2(aCClassTaskValue, aCClassTask);
            ACClassTaskValueEntityType.CreateForeignKey3(aCClassTaskValue, vBUser);
            ACClassTaskValuePosEntityType.CreateForeignKey1(aCClassTaskValuePos, aCClassTaskValue);
            ACClassTextEntityType.CreateForeignKey1(aCClassText, aCClass);
            ACClassWFEntityType.CreateForeignKey1(aCClassWF, aCClassMethod);
            ACClassWFEntityType.CreateForeignKey2(aCClassWF, aCClass);
            ACClassWFEntityType.CreateForeignKey3(aCClassWF, aCClassWF);
            ACClassWFEntityType.CreateForeignKey4(aCClassWF, aCClass);
            ACClassWFEntityType.CreateForeignKey5(aCClassWF, aCClassMethod);
            ACClassWFEdgeEntityType.CreateForeignKey1(aCClassWFEdge, aCClassMethod);
            ACClassWFEdgeEntityType.CreateForeignKey2(aCClassWFEdge, aCClassMethod);
            ACClassWFEdgeEntityType.CreateForeignKey3(aCClassWFEdge, aCClassProperty);
            ACClassWFEdgeEntityType.CreateForeignKey4(aCClassWFEdge, aCClassWF);
            ACClassWFEdgeEntityType.CreateForeignKey5(aCClassWFEdge, aCClassMethod);
            ACClassWFEdgeEntityType.CreateForeignKey6(aCClassWFEdge, aCClassProperty);
            ACClassWFEdgeEntityType.CreateForeignKey7(aCClassWFEdge, aCClassWF);
            ACProgramEntityType.CreateForeignKey1(aCProgram, aCClassMethod);
            ACProgramEntityType.CreateForeignKey2(aCProgram, aCClass);
            ACProgramConfigEntityType.CreateForeignKey1(aCProgramConfig, aCClass);
            ACProgramConfigEntityType.CreateForeignKey2(aCProgramConfig, aCClassPropertyRelation);
            ACProgramConfigEntityType.CreateForeignKey3(aCProgramConfig, aCProgram);
            ACProgramConfigEntityType.CreateForeignKey4(aCProgramConfig, aCProgramConfig);
            ACProgramConfigEntityType.CreateForeignKey5(aCProgramConfig, aCClass);
            ACProgramLogEntityType.CreateForeignKey1(aCProgramLog, aCProgram);
            ACProgramLogEntityType.CreateForeignKey2(aCProgramLog, aCProgramLog);
            ACProgramLogPropertyLogEntityType.CreateForeignKey1(aCProgramLogPropertyLog, aCPropertyLog);
            ACProgramLogTaskEntityType.CreateForeignKey1(aCProgramLogTask, aCProgramLog);
            ACProjectEntityType.CreateForeignKey1(aCProject, aCProject);
            ACProjectEntityType.CreateForeignKey2(aCProject, aCClass);
            ACPropertyLogEntityType.CreateForeignKey1(aCPropertyLog, aCClass);
            ACPropertyLogEntityType.CreateForeignKey2(aCPropertyLog, aCClassProperty);
            ACPropertyLogRuleEntityType.CreateForeignKey1(aCPropertyLogRule, aCClass);
            CalendarHolidayEntityType.CreateForeignKey1(calendarHoliday, calendar);
            CalendarHolidayEntityType.CreateForeignKey2(calendarHoliday, mDCountry);
            CalendarHolidayEntityType.CreateForeignKey3(calendarHoliday, mDCountryLand);
            CalendarShiftEntityType.CreateForeignKey1(calendarShift, calendar);
            CalendarShiftEntityType.CreateForeignKey2(calendarShift, mDTimeRange);
            CalendarShiftEntityType.CreateForeignKey3(calendarShift, aCProject);
            CalendarShiftPersonEntityType.CreateForeignKey1(calendarShiftPerson, calendarShift);
            CalendarShiftPersonEntityType.CreateForeignKey2(calendarShiftPerson, companyPerson);
            CompanyEntityType.CreateForeignKey1(company, mDTermOfPayment);
            CompanyEntityType.CreateForeignKey2(company, mDCurrency);
            CompanyEntityType.CreateForeignKey3(company, company);
            CompanyEntityType.CreateForeignKey4(company, mDTermOfPayment);
            CompanyEntityType.CreateForeignKey5(company, vBUser);
            CompanyAddressEntityType.CreateForeignKey1(companyAddress, company);
            CompanyAddressEntityType.CreateForeignKey2(companyAddress, mDCountry);
            CompanyAddressEntityType.CreateForeignKey3(companyAddress, mDCountryLand);
            CompanyAddressEntityType.CreateForeignKey4(companyAddress, mDDelivType);
            CompanyAddressDepartmentEntityType.CreateForeignKey1(companyAddressDepartment, companyAddress);
            CompanyAddressUnloadingpointEntityType.CreateForeignKey1(companyAddressUnloadingpoint, companyAddress);
            CompanyMaterialEntityType.CreateForeignKey1(companyMaterial, company);
            CompanyMaterialEntityType.CreateForeignKey2(companyMaterial, mDUnit);
            CompanyMaterialEntityType.CreateForeignKey3(companyMaterial, material);
            CompanyMaterialHistoryEntityType.CreateForeignKey1(companyMaterialHistory, companyMaterial);
            CompanyMaterialHistoryEntityType.CreateForeignKey2(companyMaterialHistory, history);
            CompanyMaterialPickupEntityType.CreateForeignKey1(companyMaterialPickup, companyMaterial);
            CompanyMaterialPickupEntityType.CreateForeignKey2(companyMaterialPickup, inOrderPos);
            CompanyMaterialPickupEntityType.CreateForeignKey3(companyMaterialPickup, outOrderPos);
            CompanyMaterialStockEntityType.CreateForeignKey1(companyMaterialStock, companyMaterial);
            CompanyMaterialStockEntityType.CreateForeignKey2(companyMaterialStock, mDReleaseState);
            CompanyPersonEntityType.CreateForeignKey1(companyPerson, company);
            CompanyPersonEntityType.CreateForeignKey2(companyPerson, mDCountry);
            CompanyPersonEntityType.CreateForeignKey3(companyPerson, mDTimeRange);
            CompanyPersonRoleEntityType.CreateForeignKey1(companyPersonRole, companyAddressDepartment);
            CompanyPersonRoleEntityType.CreateForeignKey2(companyPersonRole, companyPerson);
            CompanyPersonRoleEntityType.CreateForeignKey3(companyPersonRole, aCClass);
            DeliveryNoteEntityType.CreateForeignKey1(deliveryNote, companyAddress);
            DeliveryNoteEntityType.CreateForeignKey2(deliveryNote, companyAddress);
            DeliveryNoteEntityType.CreateForeignKey3(deliveryNote, mDDelivNoteState);
            DeliveryNoteEntityType.CreateForeignKey4(deliveryNote, companyAddress);
            DeliveryNoteEntityType.CreateForeignKey5(deliveryNote, tourplanPos);
            DeliveryNoteEntityType.CreateForeignKey6(deliveryNote, visitorVoucher);
            DeliveryNotePosEntityType.CreateForeignKey1(deliveryNotePos, deliveryNote);
            DeliveryNotePosEntityType.CreateForeignKey2(deliveryNotePos, inOrderPos);
            DeliveryNotePosEntityType.CreateForeignKey3(deliveryNotePos, outOrderPos);
            DemandOrderEntityType.CreateForeignKey1(demandOrder, mDDemandOrderState);
            DemandOrderPosEntityType.CreateForeignKey1(demandOrderPos, aCProgram);
            DemandOrderPosEntityType.CreateForeignKey2(demandOrderPos, demandOrder);
            DemandOrderPosEntityType.CreateForeignKey3(demandOrderPos, material);
            DemandOrderPosEntityType.CreateForeignKey4(demandOrderPos, partslist);
            DemandOrderPosEntityType.CreateForeignKey5(demandOrderPos, aCClassMethod);
            DemandPrimaryEntityType.CreateForeignKey1(demandPrimary, calendar);
            DemandPrimaryEntityType.CreateForeignKey2(demandPrimary, material);
            DemandProdOrderEntityType.CreateForeignKey1(demandProdOrder, demandOrder);
            FacilityEntityType.CreateForeignKey1(facility, company);
            FacilityEntityType.CreateForeignKey2(facility, companyPerson);
            FacilityEntityType.CreateForeignKey3(facility, facility);
            FacilityEntityType.CreateForeignKey4(facility, facility);
            FacilityEntityType.CreateForeignKey5(facility, mDFacilityType);
            FacilityEntityType.CreateForeignKey6(facility, mDFacilityVehicleType);
            FacilityEntityType.CreateForeignKey7(facility, mDUnit);
            FacilityEntityType.CreateForeignKey8(facility, material);
            FacilityEntityType.CreateForeignKey9(facility, facility);
            FacilityEntityType.CreateForeignKey10(facility, facility);
            FacilityEntityType.CreateForeignKey11(facility, partslist);
            FacilityEntityType.CreateForeignKey12(facility, aCClassMethod);
            FacilityEntityType.CreateForeignKey13(facility, aCClass);
            FacilityEntityType.CreateForeignKey14(facility, aCClass);
            FacilityBookingEntityType.CreateForeignKey1(facilityBooking, company);
            FacilityBookingEntityType.CreateForeignKey2(facilityBooking, facilityInventoryPos);
            FacilityBookingEntityType.CreateForeignKey3(facilityBooking, history);
            FacilityBookingEntityType.CreateForeignKey4(facilityBooking, inOrderPos);
            FacilityBookingEntityType.CreateForeignKey5(facilityBooking, companyMaterial);
            FacilityBookingEntityType.CreateForeignKey6(facilityBooking, facilityCharge);
            FacilityBookingEntityType.CreateForeignKey7(facilityBooking, facility);
            FacilityBookingEntityType.CreateForeignKey8(facilityBooking, facility);
            FacilityBookingEntityType.CreateForeignKey9(facilityBooking, facilityLot);
            FacilityBookingEntityType.CreateForeignKey10(facilityBooking, material);
            FacilityBookingEntityType.CreateForeignKey11(facilityBooking, partslist);
            FacilityBookingEntityType.CreateForeignKey12(facilityBooking, mDBalancingMode);
            FacilityBookingEntityType.CreateForeignKey13(facilityBooking, mDBookingNotAvailableMode);
            FacilityBookingEntityType.CreateForeignKey14(facilityBooking, mDMovementReason);
            FacilityBookingEntityType.CreateForeignKey15(facilityBooking, mDReleaseState);
            FacilityBookingEntityType.CreateForeignKey16(facilityBooking, mDReservationMode);
            FacilityBookingEntityType.CreateForeignKey17(facilityBooking, mDUnit);
            FacilityBookingEntityType.CreateForeignKey18(facilityBooking, mDZeroStockState);
            FacilityBookingEntityType.CreateForeignKey19(facilityBooking, outOrderPos);
            FacilityBookingEntityType.CreateForeignKey20(facilityBooking, companyMaterial);
            FacilityBookingEntityType.CreateForeignKey21(facilityBooking, facilityCharge);
            FacilityBookingEntityType.CreateForeignKey22(facilityBooking, facility);
            FacilityBookingEntityType.CreateForeignKey23(facilityBooking, facility);
            FacilityBookingEntityType.CreateForeignKey24(facilityBooking, facilityLot);
            FacilityBookingEntityType.CreateForeignKey25(facilityBooking, material);
            FacilityBookingEntityType.CreateForeignKey26(facilityBooking, partslist);
            FacilityBookingEntityType.CreateForeignKey27(facilityBooking, pickingPos);
            FacilityBookingEntityType.CreateForeignKey28(facilityBooking, prodOrderPartslistPosFacilityLot);
            FacilityBookingEntityType.CreateForeignKey29(facilityBooking, prodOrderPartslistPos);
            FacilityBookingEntityType.CreateForeignKey30(facilityBooking, prodOrderPartslistPosRelation);
            FacilityBookingEntityType.CreateForeignKey31(facilityBooking, aCClass);
            FacilityBookingChargeEntityType.CreateForeignKey1(facilityBookingCharge, facilityBooking);
            FacilityBookingChargeEntityType.CreateForeignKey2(facilityBookingCharge, facilityInventoryPos);
            FacilityBookingChargeEntityType.CreateForeignKey3(facilityBookingCharge, inOrderPos);
            FacilityBookingChargeEntityType.CreateForeignKey4(facilityBookingCharge, companyMaterial);
            FacilityBookingChargeEntityType.CreateForeignKey5(facilityBookingCharge, companyMaterial);
            FacilityBookingChargeEntityType.CreateForeignKey6(facilityBookingCharge, facilityCharge);
            FacilityBookingChargeEntityType.CreateForeignKey7(facilityBookingCharge, facility);
            FacilityBookingChargeEntityType.CreateForeignKey8(facilityBookingCharge, facility);
            FacilityBookingChargeEntityType.CreateForeignKey9(facilityBookingCharge, facilityLot);
            FacilityBookingChargeEntityType.CreateForeignKey10(facilityBookingCharge, material);
            FacilityBookingChargeEntityType.CreateForeignKey11(facilityBookingCharge, partslist);
            FacilityBookingChargeEntityType.CreateForeignKey12(facilityBookingCharge, mDBalancingMode);
            FacilityBookingChargeEntityType.CreateForeignKey13(facilityBookingCharge, mDBookingNotAvailableMode);
            FacilityBookingChargeEntityType.CreateForeignKey14(facilityBookingCharge, mDMovementReason);
            FacilityBookingChargeEntityType.CreateForeignKey15(facilityBookingCharge, mDReleaseState);
            FacilityBookingChargeEntityType.CreateForeignKey16(facilityBookingCharge, mDReservationMode);
            FacilityBookingChargeEntityType.CreateForeignKey17(facilityBookingCharge, mDUnit);
            FacilityBookingChargeEntityType.CreateForeignKey18(facilityBookingCharge, mDZeroStockState);
            FacilityBookingChargeEntityType.CreateForeignKey19(facilityBookingCharge, outOrderPos);
            FacilityBookingChargeEntityType.CreateForeignKey20(facilityBookingCharge, companyMaterial);
            FacilityBookingChargeEntityType.CreateForeignKey21(facilityBookingCharge, companyMaterial);
            FacilityBookingChargeEntityType.CreateForeignKey22(facilityBookingCharge, facilityCharge);
            FacilityBookingChargeEntityType.CreateForeignKey23(facilityBookingCharge, facility);
            FacilityBookingChargeEntityType.CreateForeignKey24(facilityBookingCharge, facility);
            FacilityBookingChargeEntityType.CreateForeignKey25(facilityBookingCharge, facilityLot);
            FacilityBookingChargeEntityType.CreateForeignKey26(facilityBookingCharge, material);
            FacilityBookingChargeEntityType.CreateForeignKey27(facilityBookingCharge, partslist);
            FacilityBookingChargeEntityType.CreateForeignKey28(facilityBookingCharge, pickingPos);
            FacilityBookingChargeEntityType.CreateForeignKey29(facilityBookingCharge, prodOrderPartslistPosFacilityLot);
            FacilityBookingChargeEntityType.CreateForeignKey30(facilityBookingCharge, prodOrderPartslistPos);
            FacilityBookingChargeEntityType.CreateForeignKey31(facilityBookingCharge, prodOrderPartslistPosRelation);
            FacilityBookingChargeEntityType.CreateForeignKey32(facilityBookingCharge, aCClass);
            FacilityChargeEntityType.CreateForeignKey1(facilityCharge, companyMaterial);
            FacilityChargeEntityType.CreateForeignKey2(facilityCharge, companyMaterial);
            FacilityChargeEntityType.CreateForeignKey3(facilityCharge, facility);
            FacilityChargeEntityType.CreateForeignKey4(facilityCharge, facilityLot);
            FacilityChargeEntityType.CreateForeignKey5(facilityCharge, mDReleaseState);
            FacilityChargeEntityType.CreateForeignKey6(facilityCharge, mDUnit);
            FacilityChargeEntityType.CreateForeignKey7(facilityCharge, material);
            FacilityChargeEntityType.CreateForeignKey8(facilityCharge, partslist);
            FacilityHistoryEntityType.CreateForeignKey1(facilityHistory, facility);
            FacilityHistoryEntityType.CreateForeignKey2(facilityHistory, history);
            FacilityInventoryEntityType.CreateForeignKey1(facilityInventory, facility);
            FacilityInventoryEntityType.CreateForeignKey2(facilityInventory, mDFacilityInventoryState);
            FacilityInventoryPosEntityType.CreateForeignKey1(facilityInventoryPos, facilityCharge);
            FacilityInventoryPosEntityType.CreateForeignKey2(facilityInventoryPos, facilityInventory);
            FacilityInventoryPosEntityType.CreateForeignKey3(facilityInventoryPos, mDFacilityInventoryPosState);
            FacilityLotEntityType.CreateForeignKey1(facilityLot, mDReleaseState);
            FacilityLotEntityType.CreateForeignKey2(facilityLot, material);
            FacilityLotStockEntityType.CreateForeignKey1(facilityLotStock, facilityLot);
            FacilityLotStockEntityType.CreateForeignKey2(facilityLotStock, mDReleaseState);
            FacilityMDSchedulingGroupEntityType.CreateForeignKey1(facilityMDSchedulingGroup, facility);
            FacilityMDSchedulingGroupEntityType.CreateForeignKey2(facilityMDSchedulingGroup, mDPickingType);
            FacilityMDSchedulingGroupEntityType.CreateForeignKey3(facilityMDSchedulingGroup, mDSchedulingGroup);
            FacilityMaterialEntityType.CreateForeignKey1(facilityMaterial, facility);
            FacilityMaterialEntityType.CreateForeignKey2(facilityMaterial, material);
            FacilityMaterialOEEEntityType.CreateForeignKey1(facilityMaterialOEE, facilityMaterial);
            FacilityPreBookingEntityType.CreateForeignKey1(facilityPreBooking, inOrderPos);
            FacilityPreBookingEntityType.CreateForeignKey2(facilityPreBooking, outOrderPos);
            FacilityPreBookingEntityType.CreateForeignKey3(facilityPreBooking, pickingPos);
            FacilityPreBookingEntityType.CreateForeignKey4(facilityPreBooking, prodOrderPartslistPos);
            FacilityPreBookingEntityType.CreateForeignKey5(facilityPreBooking, prodOrderPartslistPosRelation);
            FacilityReservationEntityType.CreateForeignKey1(facilityReservation, facilityCharge);
            FacilityReservationEntityType.CreateForeignKey2(facilityReservation, facility);
            FacilityReservationEntityType.CreateForeignKey3(facilityReservation, facilityLot);
            FacilityReservationEntityType.CreateForeignKey4(facilityReservation, inOrderPos);
            FacilityReservationEntityType.CreateForeignKey5(facilityReservation, material);
            FacilityReservationEntityType.CreateForeignKey6(facilityReservation, outOrderPos);
            FacilityReservationEntityType.CreateForeignKey7(facilityReservation, facilityReservation);
            FacilityReservationEntityType.CreateForeignKey8(facilityReservation, pickingPos);
            FacilityReservationEntityType.CreateForeignKey9(facilityReservation, prodOrderBatchPlan);
            FacilityReservationEntityType.CreateForeignKey10(facilityReservation, prodOrderPartslistPos);
            FacilityReservationEntityType.CreateForeignKey11(facilityReservation, prodOrderPartslistPosRelation);
            FacilityReservationEntityType.CreateForeignKey12(facilityReservation, aCClass);
            FacilityStockEntityType.CreateForeignKey1(facilityStock, facility);
            FacilityStockEntityType.CreateForeignKey2(facilityStock, mDReleaseState);
            HistoryConfigEntityType.CreateForeignKey1(historyConfig, history);
            HistoryConfigEntityType.CreateForeignKey2(historyConfig, historyConfig);
            HistoryConfigEntityType.CreateForeignKey3(historyConfig, aCClass);
            HistoryConfigEntityType.CreateForeignKey4(historyConfig, aCClassPropertyRelation);
            HistoryConfigEntityType.CreateForeignKey5(historyConfig, aCClassWF);
            HistoryConfigEntityType.CreateForeignKey6(historyConfig, aCClass);
            InOrderEntityType.CreateForeignKey1(inOrder, inRequest);
            InOrderEntityType.CreateForeignKey2(inOrder, companyAddress);
            InOrderEntityType.CreateForeignKey3(inOrder, company);
            InOrderEntityType.CreateForeignKey4(inOrder, companyAddress);
            InOrderEntityType.CreateForeignKey5(inOrder, company);
            InOrderEntityType.CreateForeignKey6(inOrder, companyPerson);
            InOrderEntityType.CreateForeignKey7(inOrder, mDCurrency);
            InOrderEntityType.CreateForeignKey8(inOrder, mDDelivType);
            InOrderEntityType.CreateForeignKey9(inOrder, mDInOrderState);
            InOrderEntityType.CreateForeignKey10(inOrder, mDInOrderType);
            InOrderEntityType.CreateForeignKey11(inOrder, mDTermOfPayment);
            InOrderEntityType.CreateForeignKey12(inOrder, mDTimeRange);
            InOrderConfigEntityType.CreateForeignKey1(inOrderConfig, inOrder);
            InOrderConfigEntityType.CreateForeignKey2(inOrderConfig, material);
            InOrderConfigEntityType.CreateForeignKey3(inOrderConfig, inOrderConfig);
            InOrderConfigEntityType.CreateForeignKey4(inOrderConfig, aCClass);
            InOrderConfigEntityType.CreateForeignKey5(inOrderConfig, aCClassPropertyRelation);
            InOrderConfigEntityType.CreateForeignKey6(inOrderConfig, aCClassWF);
            InOrderConfigEntityType.CreateForeignKey7(inOrderConfig, aCClass);
            InOrderPosEntityType.CreateForeignKey1(inOrderPos, inOrder);
            InOrderPosEntityType.CreateForeignKey2(inOrderPos, mDCountrySalesTax);
            InOrderPosEntityType.CreateForeignKey3(inOrderPos, mDDelivPosLoadState);
            InOrderPosEntityType.CreateForeignKey4(inOrderPos, mDDelivPosState);
            InOrderPosEntityType.CreateForeignKey5(inOrderPos, mDInOrderPosState);
            InOrderPosEntityType.CreateForeignKey6(inOrderPos, mDTimeRange);
            InOrderPosEntityType.CreateForeignKey7(inOrderPos, mDTransportMode);
            InOrderPosEntityType.CreateForeignKey8(inOrderPos, mDUnit);
            InOrderPosEntityType.CreateForeignKey9(inOrderPos, material);
            InOrderPosEntityType.CreateForeignKey10(inOrderPos, inOrderPos);
            InOrderPosEntityType.CreateForeignKey11(inOrderPos, companyMaterial);
            InOrderPosSplitEntityType.CreateForeignKey1(inOrderPosSplit, inOrderPos);
            InRequestEntityType.CreateForeignKey1(inRequest, companyAddress);
            InRequestEntityType.CreateForeignKey2(inRequest, companyAddress);
            InRequestEntityType.CreateForeignKey3(inRequest, company);
            InRequestEntityType.CreateForeignKey4(inRequest, mDDelivType);
            InRequestEntityType.CreateForeignKey5(inRequest, mDInOrderType);
            InRequestEntityType.CreateForeignKey6(inRequest, mDInRequestState);
            InRequestEntityType.CreateForeignKey7(inRequest, mDTermOfPayment);
            InRequestEntityType.CreateForeignKey8(inRequest, mDTimeRange);
            InRequestConfigEntityType.CreateForeignKey1(inRequestConfig, inRequest);
            InRequestConfigEntityType.CreateForeignKey2(inRequestConfig, material);
            InRequestConfigEntityType.CreateForeignKey3(inRequestConfig, inRequestConfig);
            InRequestConfigEntityType.CreateForeignKey4(inRequestConfig, aCClass);
            InRequestConfigEntityType.CreateForeignKey5(inRequestConfig, aCClassPropertyRelation);
            InRequestConfigEntityType.CreateForeignKey6(inRequestConfig, aCClass);
            InRequestPosEntityType.CreateForeignKey1(inRequestPos, inRequest);
            InRequestPosEntityType.CreateForeignKey2(inRequestPos, mDCountrySalesTax);
            InRequestPosEntityType.CreateForeignKey3(inRequestPos, mDTimeRange);
            InRequestPosEntityType.CreateForeignKey4(inRequestPos, mDUnit);
            InRequestPosEntityType.CreateForeignKey5(inRequestPos, material);
            InRequestPosEntityType.CreateForeignKey6(inRequestPos, inRequestPos);
            InvoiceEntityType.CreateForeignKey1(invoice, companyAddress);
            InvoiceEntityType.CreateForeignKey2(invoice, company);
            InvoiceEntityType.CreateForeignKey3(invoice, companyAddress);
            InvoiceEntityType.CreateForeignKey4(invoice, companyAddress);
            InvoiceEntityType.CreateForeignKey5(invoice, companyPerson);
            InvoiceEntityType.CreateForeignKey6(invoice, mDCurrencyExchange);
            InvoiceEntityType.CreateForeignKey7(invoice, mDCurrency);
            InvoiceEntityType.CreateForeignKey8(invoice, mDInvoiceState);
            InvoiceEntityType.CreateForeignKey9(invoice, mDInvoiceType);
            InvoiceEntityType.CreateForeignKey10(invoice, mDTermOfPayment);
            InvoiceEntityType.CreateForeignKey11(invoice, outOrder);
            InvoicePosEntityType.CreateForeignKey1(invoicePos, invoice);
            InvoicePosEntityType.CreateForeignKey2(invoicePos, mDCountrySalesTax);
            InvoicePosEntityType.CreateForeignKey3(invoicePos, mDCountrySalesTaxMDMaterialGroup);
            InvoicePosEntityType.CreateForeignKey4(invoicePos, mDCountrySalesTaxMaterial);
            InvoicePosEntityType.CreateForeignKey5(invoicePos, mDUnit);
            InvoicePosEntityType.CreateForeignKey6(invoicePos, material);
            InvoicePosEntityType.CreateForeignKey7(invoicePos, outOrderPos);
            LabOrderEntityType.CreateForeignKey1(labOrder, labOrder);
            LabOrderEntityType.CreateForeignKey2(labOrder, facilityLot);
            LabOrderEntityType.CreateForeignKey3(labOrder, inOrderPos);
            LabOrderEntityType.CreateForeignKey4(labOrder, mDLabOrderState);
            LabOrderEntityType.CreateForeignKey5(labOrder, material);
            LabOrderEntityType.CreateForeignKey6(labOrder, outOrderPos);
            LabOrderEntityType.CreateForeignKey7(labOrder, pickingPos);
            LabOrderEntityType.CreateForeignKey8(labOrder, prodOrderPartslistPos);
            LabOrderPosEntityType.CreateForeignKey1(labOrderPos, labOrder);
            LabOrderPosEntityType.CreateForeignKey2(labOrderPos, mDLabOrderPosState);
            LabOrderPosEntityType.CreateForeignKey3(labOrderPos, mDLabTag);
            LabelTranslationEntityType.CreateForeignKey1(labelTranslation, label);
            LabelTranslationEntityType.CreateForeignKey2(labelTranslation, vBLanguage);
            MDCountryEntityType.CreateForeignKey1(mDCountry, mDCurrency);
            MDCountryLandEntityType.CreateForeignKey1(mDCountryLand, mDCountry);
            MDCountrySalesTaxEntityType.CreateForeignKey1(mDCountrySalesTax, mDCountry);
            MDCountrySalesTaxMDMaterialGroupEntityType.CreateForeignKey1(mDCountrySalesTaxMDMaterialGroup, mDCountrySalesTax);
            MDCountrySalesTaxMDMaterialGroupEntityType.CreateForeignKey2(mDCountrySalesTaxMDMaterialGroup, mDMaterialGroup);
            MDCountrySalesTaxMaterialEntityType.CreateForeignKey1(mDCountrySalesTaxMaterial, mDCountrySalesTax);
            MDCountrySalesTaxMaterialEntityType.CreateForeignKey2(mDCountrySalesTaxMaterial, material);
            MDCurrencyExchangeEntityType.CreateForeignKey1(mDCurrencyExchange, mDCurrency);
            MDCurrencyExchangeEntityType.CreateForeignKey2(mDCurrencyExchange, mDCurrency);
            MDGMPAdditiveEntityType.CreateForeignKey1(mDGMPAdditive, mDProcessErrorAction);
            MDGMPAdditiveEntityType.CreateForeignKey2(mDGMPAdditive, mDUnit);
            MDGMPMaterialGroupPosEntityType.CreateForeignKey1(mDGMPMaterialGroupPos, mDGMPAdditive);
            MDGMPMaterialGroupPosEntityType.CreateForeignKey2(mDGMPMaterialGroupPos, mDGMPMaterialGroup);
            MDSchedulingGroupWFEntityType.CreateForeignKey1(mDSchedulingGroupWF, mDSchedulingGroup);
            MDSchedulingGroupWFEntityType.CreateForeignKey2(mDSchedulingGroupWF, aCClassWF);
            MDTimeRangeEntityType.CreateForeignKey1(mDTimeRange, mDTimeRange);
            MDUnitConversionEntityType.CreateForeignKey1(mDUnitConversion, mDUnit);
            MDUnitConversionEntityType.CreateForeignKey2(mDUnitConversion, mDUnit);
            MDVisitorCardEntityType.CreateForeignKey1(mDVisitorCard, mDVisitorCardState);
            MaintACClassEntityType.CreateForeignKey1(maintACClass, aCClass);
            MaintACClassPropertyEntityType.CreateForeignKey1(maintACClassProperty, maintACClass);
            MaintACClassPropertyEntityType.CreateForeignKey2(maintACClassProperty, aCClassProperty);
            MaintOrderEntityType.CreateForeignKey1(maintOrder, maintOrder);
            MaintOrderEntityType.CreateForeignKey2(maintOrder, facility);
            MaintOrderEntityType.CreateForeignKey3(maintOrder, mDMaintOrderState);
            MaintOrderEntityType.CreateForeignKey4(maintOrder, maintACClass);
            MaintOrderEntityType.CreateForeignKey5(maintOrder, picking);
            MaintOrderEntityType.CreateForeignKey6(maintOrder, aCClass);
            MaintOrderAssignmentEntityType.CreateForeignKey1(maintOrderAssignment, company);
            MaintOrderAssignmentEntityType.CreateForeignKey2(maintOrderAssignment, maintOrder);
            MaintOrderAssignmentEntityType.CreateForeignKey3(maintOrderAssignment, vBGroup);
            MaintOrderAssignmentEntityType.CreateForeignKey4(maintOrderAssignment, vBUser);
            MaintOrderPosEntityType.CreateForeignKey1(maintOrderPos, maintOrder);
            MaintOrderPosEntityType.CreateForeignKey2(maintOrderPos, material);
            MaintOrderPropertyEntityType.CreateForeignKey1(maintOrderProperty, maintACClassProperty);
            MaintOrderPropertyEntityType.CreateForeignKey2(maintOrderProperty, maintOrder);
            MaintOrderTaskEntityType.CreateForeignKey1(maintOrderTask, mDMaintTaskState);
            MaintOrderTaskEntityType.CreateForeignKey2(maintOrderTask, maintOrder);
            MaterialEntityType.CreateForeignKey1(material, mDUnit);
            MaterialEntityType.CreateForeignKey2(material, facility);
            MaterialEntityType.CreateForeignKey3(material, label);
            MaterialEntityType.CreateForeignKey4(material, mDFacilityManagementType);
            MaterialEntityType.CreateForeignKey5(material, mDGMPMaterialGroup);
            MaterialEntityType.CreateForeignKey6(material, mDInventoryManagementType);
            MaterialEntityType.CreateForeignKey7(material, mDMaterialGroup);
            MaterialEntityType.CreateForeignKey8(material, mDMaterialType);
            MaterialEntityType.CreateForeignKey9(material, facility);
            MaterialEntityType.CreateForeignKey10(material, material);
            MaterialEntityType.CreateForeignKey11(material, aCClassMethod);
            MaterialEntityType.CreateForeignKey12(material, aCClass);
            MaterialCalculationEntityType.CreateForeignKey1(materialCalculation, material);
            MaterialConfigEntityType.CreateForeignKey1(materialConfig, material);
            MaterialConfigEntityType.CreateForeignKey2(materialConfig, materialConfig);
            MaterialConfigEntityType.CreateForeignKey3(materialConfig, aCClass);
            MaterialConfigEntityType.CreateForeignKey4(materialConfig, aCClassPropertyRelation);
            MaterialConfigEntityType.CreateForeignKey5(materialConfig, aCClassWF);
            MaterialConfigEntityType.CreateForeignKey6(materialConfig, aCClass);
            MaterialGMPAdditiveEntityType.CreateForeignKey1(materialGMPAdditive, mDGMPAdditive);
            MaterialGMPAdditiveEntityType.CreateForeignKey2(materialGMPAdditive, material);
            MaterialHistoryEntityType.CreateForeignKey1(materialHistory, history);
            MaterialHistoryEntityType.CreateForeignKey2(materialHistory, material);
            MaterialStockEntityType.CreateForeignKey1(materialStock, mDReleaseState);
            MaterialStockEntityType.CreateForeignKey2(materialStock, material);
            MaterialUnitEntityType.CreateForeignKey1(materialUnit, material);
            MaterialUnitEntityType.CreateForeignKey2(materialUnit, mDUnit);
            MaterialWFACClassMethodEntityType.CreateForeignKey1(materialWFACClassMethod, aCClassMethod);
            MaterialWFACClassMethodEntityType.CreateForeignKey2(materialWFACClassMethod, materialWF);
            MaterialWFACClassMethodConfigEntityType.CreateForeignKey1(materialWFACClassMethodConfig, materialWFACClassMethod);
            MaterialWFACClassMethodConfigEntityType.CreateForeignKey2(materialWFACClassMethodConfig, materialWFACClassMethodConfig);
            MaterialWFACClassMethodConfigEntityType.CreateForeignKey3(materialWFACClassMethodConfig, aCClass);
            MaterialWFACClassMethodConfigEntityType.CreateForeignKey4(materialWFACClassMethodConfig, aCClassPropertyRelation);
            MaterialWFACClassMethodConfigEntityType.CreateForeignKey5(materialWFACClassMethodConfig, aCClassWF);
            MaterialWFACClassMethodConfigEntityType.CreateForeignKey6(materialWFACClassMethodConfig, aCClass);
            MaterialWFConnectionEntityType.CreateForeignKey1(materialWFConnection, aCClassWF);
            MaterialWFConnectionEntityType.CreateForeignKey2(materialWFConnection, material);
            MaterialWFConnectionEntityType.CreateForeignKey3(materialWFConnection, materialWFACClassMethod);
            MaterialWFRelationEntityType.CreateForeignKey1(materialWFRelation, materialWF);
            MaterialWFRelationEntityType.CreateForeignKey2(materialWFRelation, material);
            MaterialWFRelationEntityType.CreateForeignKey3(materialWFRelation, material);
            MsgAlarmLogEntityType.CreateForeignKey1(msgAlarmLog, aCClass);
            MsgAlarmLogEntityType.CreateForeignKey2(msgAlarmLog, aCProgramLog);
            OperationLogEntityType.CreateForeignKey1(operationLog, aCProgramLog);
            OperationLogEntityType.CreateForeignKey2(operationLog, facilityCharge);
            OperationLogEntityType.CreateForeignKey3(operationLog, aCClass);
            OrderLogEntityType.CreateForeignKey1(orderLog, deliveryNotePos);
            OrderLogEntityType.CreateForeignKey2(orderLog, facilityBooking);
            OrderLogEntityType.CreateForeignKey3(orderLog, pickingPos);
            OrderLogEntityType.CreateForeignKey4(orderLog, prodOrderPartslistPos);
            OrderLogEntityType.CreateForeignKey5(orderLog, prodOrderPartslistPosRelation);
            OrderLogEntityType.CreateForeignKey6(orderLog, aCProgramLog);
            OutOfferEntityType.CreateForeignKey1(outOffer, companyAddress);
            OutOfferEntityType.CreateForeignKey2(outOffer, company);
            OutOfferEntityType.CreateForeignKey3(outOffer, companyAddress);
            OutOfferEntityType.CreateForeignKey4(outOffer, companyAddress);
            OutOfferEntityType.CreateForeignKey5(outOffer, companyPerson);
            OutOfferEntityType.CreateForeignKey6(outOffer, mDCurrency);
            OutOfferEntityType.CreateForeignKey7(outOffer, mDDelivType);
            OutOfferEntityType.CreateForeignKey8(outOffer, mDOutOfferState);
            OutOfferEntityType.CreateForeignKey9(outOffer, mDOutOrderType);
            OutOfferEntityType.CreateForeignKey10(outOffer, mDTermOfPayment);
            OutOfferEntityType.CreateForeignKey11(outOffer, mDTimeRange);
            OutOfferConfigEntityType.CreateForeignKey1(outOfferConfig, material);
            OutOfferConfigEntityType.CreateForeignKey2(outOfferConfig, outOffer);
            OutOfferConfigEntityType.CreateForeignKey3(outOfferConfig, outOfferConfig);
            OutOfferConfigEntityType.CreateForeignKey4(outOfferConfig, aCClass);
            OutOfferConfigEntityType.CreateForeignKey5(outOfferConfig, aCClassPropertyRelation);
            OutOfferConfigEntityType.CreateForeignKey6(outOfferConfig, aCClass);
            OutOfferPosEntityType.CreateForeignKey1(outOfferPos, outOfferPos);
            OutOfferPosEntityType.CreateForeignKey2(outOfferPos, mDCountrySalesTax);
            OutOfferPosEntityType.CreateForeignKey3(outOfferPos, mDCountrySalesTaxMDMaterialGroup);
            OutOfferPosEntityType.CreateForeignKey4(outOfferPos, mDCountrySalesTaxMaterial);
            OutOfferPosEntityType.CreateForeignKey5(outOfferPos, mDTimeRange);
            OutOfferPosEntityType.CreateForeignKey6(outOfferPos, mDUnit);
            OutOfferPosEntityType.CreateForeignKey7(outOfferPos, material);
            OutOfferPosEntityType.CreateForeignKey8(outOfferPos, outOffer);
            OutOfferPosEntityType.CreateForeignKey9(outOfferPos, outOfferPos);
            OutOrderEntityType.CreateForeignKey1(outOrder, outOffer);
            OutOrderEntityType.CreateForeignKey2(outOrder, companyAddress);
            OutOrderEntityType.CreateForeignKey3(outOrder, company);
            OutOrderEntityType.CreateForeignKey4(outOrder, company);
            OutOrderEntityType.CreateForeignKey5(outOrder, companyAddress);
            OutOrderEntityType.CreateForeignKey6(outOrder, companyAddress);
            OutOrderEntityType.CreateForeignKey7(outOrder, companyPerson);
            OutOrderEntityType.CreateForeignKey8(outOrder, mDCurrency);
            OutOrderEntityType.CreateForeignKey9(outOrder, mDDelivType);
            OutOrderEntityType.CreateForeignKey10(outOrder, mDOutOrderState);
            OutOrderEntityType.CreateForeignKey11(outOrder, mDOutOrderType);
            OutOrderEntityType.CreateForeignKey12(outOrder, mDTermOfPayment);
            OutOrderEntityType.CreateForeignKey13(outOrder, mDTimeRange);
            OutOrderConfigEntityType.CreateForeignKey1(outOrderConfig, material);
            OutOrderConfigEntityType.CreateForeignKey2(outOrderConfig, outOrder);
            OutOrderConfigEntityType.CreateForeignKey3(outOrderConfig, outOrderConfig);
            OutOrderConfigEntityType.CreateForeignKey4(outOrderConfig, aCClass);
            OutOrderConfigEntityType.CreateForeignKey5(outOrderConfig, aCClassPropertyRelation);
            OutOrderConfigEntityType.CreateForeignKey6(outOrderConfig, aCClassWF);
            OutOrderConfigEntityType.CreateForeignKey7(outOrderConfig, aCClass);
            OutOrderPosEntityType.CreateForeignKey1(outOrderPos, companyAddressUnloadingpoint);
            OutOrderPosEntityType.CreateForeignKey2(outOrderPos, outOrderPos);
            OutOrderPosEntityType.CreateForeignKey3(outOrderPos, mDCountrySalesTax);
            OutOrderPosEntityType.CreateForeignKey4(outOrderPos, mDCountrySalesTaxMDMaterialGroup);
            OutOrderPosEntityType.CreateForeignKey5(outOrderPos, mDCountrySalesTaxMaterial);
            OutOrderPosEntityType.CreateForeignKey6(outOrderPos, mDDelivPosLoadState);
            OutOrderPosEntityType.CreateForeignKey7(outOrderPos, mDDelivPosState);
            OutOrderPosEntityType.CreateForeignKey8(outOrderPos, mDOutOrderPlanState);
            OutOrderPosEntityType.CreateForeignKey9(outOrderPos, mDOutOrderPosState);
            OutOrderPosEntityType.CreateForeignKey10(outOrderPos, mDTimeRange);
            OutOrderPosEntityType.CreateForeignKey11(outOrderPos, mDToleranceState);
            OutOrderPosEntityType.CreateForeignKey12(outOrderPos, mDTourplanPosState);
            OutOrderPosEntityType.CreateForeignKey13(outOrderPos, mDTransportMode);
            OutOrderPosEntityType.CreateForeignKey14(outOrderPos, mDUnit);
            OutOrderPosEntityType.CreateForeignKey15(outOrderPos, material);
            OutOrderPosEntityType.CreateForeignKey16(outOrderPos, outOrder);
            OutOrderPosEntityType.CreateForeignKey17(outOrderPos, outOrderPos);
            OutOrderPosEntityType.CreateForeignKey18(outOrderPos, companyMaterial);
            OutOrderPosSplitEntityType.CreateForeignKey1(outOrderPosSplit, outOrderPos);
            OutOrderPosUtilizationEntityType.CreateForeignKey1(outOrderPosUtilization, material);
            OutOrderPosUtilizationEntityType.CreateForeignKey2(outOrderPosUtilization, outOrderPos);
            PartslistEntityType.CreateForeignKey1(partslist, mDUnit);
            PartslistEntityType.CreateForeignKey2(partslist, material);
            PartslistEntityType.CreateForeignKey3(partslist, materialWF);
            PartslistEntityType.CreateForeignKey4(partslist, partslist);
            PartslistACClassMethodEntityType.CreateForeignKey1(partslistACClassMethod, materialWFACClassMethod);
            PartslistACClassMethodEntityType.CreateForeignKey2(partslistACClassMethod, partslist);
            PartslistConfigEntityType.CreateForeignKey1(partslistConfig, material);
            PartslistConfigEntityType.CreateForeignKey2(partslistConfig, partslistConfig);
            PartslistConfigEntityType.CreateForeignKey3(partslistConfig, partslist);
            PartslistConfigEntityType.CreateForeignKey4(partslistConfig, aCClass);
            PartslistConfigEntityType.CreateForeignKey5(partslistConfig, aCClassPropertyRelation);
            PartslistConfigEntityType.CreateForeignKey6(partslistConfig, aCClassWF);
            PartslistConfigEntityType.CreateForeignKey7(partslistConfig, aCClass);
            PartslistPosEntityType.CreateForeignKey1(partslistPos, partslistPos);
            PartslistPosEntityType.CreateForeignKey2(partslistPos, mDUnit);
            PartslistPosEntityType.CreateForeignKey3(partslistPos, material);
            PartslistPosEntityType.CreateForeignKey4(partslistPos, partslist);
            PartslistPosEntityType.CreateForeignKey5(partslistPos, partslistPos);
            PartslistPosEntityType.CreateForeignKey6(partslistPos, partslist);
            PartslistPosRelationEntityType.CreateForeignKey1(partslistPosRelation, materialWFRelation);
            PartslistPosRelationEntityType.CreateForeignKey2(partslistPosRelation, partslistPos);
            PartslistPosRelationEntityType.CreateForeignKey3(partslistPosRelation, partslistPos);
            PartslistPosSplitEntityType.CreateForeignKey1(partslistPosSplit, partslistPos);
            PartslistStockEntityType.CreateForeignKey1(partslistStock, mDReleaseState);
            PartslistStockEntityType.CreateForeignKey2(partslistStock, partslist);
            PickingEntityType.CreateForeignKey1(picking, aCClassMethod);
            PickingEntityType.CreateForeignKey2(picking, companyAddress);
            PickingEntityType.CreateForeignKey3(picking, mDPickingType);
            PickingEntityType.CreateForeignKey4(picking, tourplan);
            PickingEntityType.CreateForeignKey5(picking, aCClassWF);
            PickingEntityType.CreateForeignKey6(picking, visitorVoucher);
            PickingConfigEntityType.CreateForeignKey1(pickingConfig, material);
            PickingConfigEntityType.CreateForeignKey2(pickingConfig, pickingConfig);
            PickingConfigEntityType.CreateForeignKey3(pickingConfig, picking);
            PickingConfigEntityType.CreateForeignKey4(pickingConfig, aCClass);
            PickingConfigEntityType.CreateForeignKey5(pickingConfig, aCClassPropertyRelation);
            PickingConfigEntityType.CreateForeignKey6(pickingConfig, aCClassWF);
            PickingConfigEntityType.CreateForeignKey7(pickingConfig, aCClass);
            PickingPosEntityType.CreateForeignKey1(pickingPos, aCClassTask);
            PickingPosEntityType.CreateForeignKey2(pickingPos, facility);
            PickingPosEntityType.CreateForeignKey3(pickingPos, inOrderPos);
            PickingPosEntityType.CreateForeignKey4(pickingPos, mDDelivPosLoadState);
            PickingPosEntityType.CreateForeignKey5(pickingPos, outOrderPos);
            PickingPosEntityType.CreateForeignKey6(pickingPos, picking);
            PickingPosEntityType.CreateForeignKey7(pickingPos, material);
            PickingPosEntityType.CreateForeignKey8(pickingPos, facility);
            PickingPosProdOrderPartslistPosEntityType.CreateForeignKey1(pickingPosProdOrderPartslistPos, pickingPos);
            PickingPosProdOrderPartslistPosEntityType.CreateForeignKey2(pickingPosProdOrderPartslistPos, prodOrderPartslistPos);
            PlanningMRConsEntityType.CreateForeignKey1(planningMRCons, partslist);
            PlanningMRConsEntityType.CreateForeignKey2(planningMRCons, material);
            PlanningMRConsEntityType.CreateForeignKey3(planningMRCons, planningMR);
            PlanningMRPosEntityType.CreateForeignKey1(planningMRPos, inOrderPos);
            PlanningMRPosEntityType.CreateForeignKey2(planningMRPos, outOrderPos);
            PlanningMRPosEntityType.CreateForeignKey3(planningMRPos, planningMRCons);
            PlanningMRPosEntityType.CreateForeignKey4(planningMRPos, planningMRProposal);
            PlanningMRPosEntityType.CreateForeignKey5(planningMRPos, prodOrderPartslist);
            PlanningMRPosEntityType.CreateForeignKey6(planningMRPos, prodOrderPartslistPos);
            PlanningMRProposalEntityType.CreateForeignKey1(planningMRProposal, inOrder);
            PlanningMRProposalEntityType.CreateForeignKey2(planningMRProposal, planningMR);
            PlanningMRProposalEntityType.CreateForeignKey3(planningMRProposal, prodOrder);
            PlanningMRProposalEntityType.CreateForeignKey4(planningMRProposal, prodOrderPartslist);
            PriceListEntityType.CreateForeignKey1(priceList, mDCurrency);
            PriceListMaterialEntityType.CreateForeignKey1(priceListMaterial, material);
            PriceListMaterialEntityType.CreateForeignKey2(priceListMaterial, priceList);
            ProdOrderEntityType.CreateForeignKey1(prodOrder, company);
            ProdOrderEntityType.CreateForeignKey2(prodOrder, mDProdOrderState);
            ProdOrderBatchEntityType.CreateForeignKey1(prodOrderBatch, mDProdOrderState);
            ProdOrderBatchEntityType.CreateForeignKey2(prodOrderBatch, prodOrderBatchPlan);
            ProdOrderBatchEntityType.CreateForeignKey3(prodOrderBatch, prodOrderPartslist);
            ProdOrderBatchPlanEntityType.CreateForeignKey1(prodOrderBatchPlan, mDBatchPlanGroup);
            ProdOrderBatchPlanEntityType.CreateForeignKey2(prodOrderBatchPlan, materialWFACClassMethod);
            ProdOrderBatchPlanEntityType.CreateForeignKey3(prodOrderBatchPlan, prodOrderPartslist);
            ProdOrderBatchPlanEntityType.CreateForeignKey4(prodOrderBatchPlan, prodOrderPartslistPos);
            ProdOrderBatchPlanEntityType.CreateForeignKey5(prodOrderBatchPlan, aCClassWF);
            ProdOrderPartslistEntityType.CreateForeignKey1(prodOrderPartslist, mDProdOrderState);
            ProdOrderPartslistEntityType.CreateForeignKey2(prodOrderPartslist, partslist);
            ProdOrderPartslistEntityType.CreateForeignKey3(prodOrderPartslist, prodOrder);
            ProdOrderPartslistEntityType.CreateForeignKey4(prodOrderPartslist, aCProgram);
            ProdOrderPartslistConfigEntityType.CreateForeignKey1(prodOrderPartslistConfig, material);
            ProdOrderPartslistConfigEntityType.CreateForeignKey2(prodOrderPartslistConfig, prodOrderPartslistConfig);
            ProdOrderPartslistConfigEntityType.CreateForeignKey3(prodOrderPartslistConfig, prodOrderPartslist);
            ProdOrderPartslistConfigEntityType.CreateForeignKey4(prodOrderPartslistConfig, aCClass);
            ProdOrderPartslistConfigEntityType.CreateForeignKey5(prodOrderPartslistConfig, aCClassPropertyRelation);
            ProdOrderPartslistConfigEntityType.CreateForeignKey6(prodOrderPartslistConfig, aCClassWF);
            ProdOrderPartslistConfigEntityType.CreateForeignKey7(prodOrderPartslistConfig, aCClass);
            ProdOrderPartslistPosEntityType.CreateForeignKey1(prodOrderPartslistPos, aCClassTask);
            ProdOrderPartslistPosEntityType.CreateForeignKey2(prodOrderPartslistPos, prodOrderPartslistPos);
            ProdOrderPartslistPosEntityType.CreateForeignKey3(prodOrderPartslistPos, partslistPos);
            ProdOrderPartslistPosEntityType.CreateForeignKey4(prodOrderPartslistPos, facilityLot);
            ProdOrderPartslistPosEntityType.CreateForeignKey5(prodOrderPartslistPos, mDProdOrderPartslistPosState);
            ProdOrderPartslistPosEntityType.CreateForeignKey6(prodOrderPartslistPos, mDToleranceState);
            ProdOrderPartslistPosEntityType.CreateForeignKey7(prodOrderPartslistPos, mDUnit);
            ProdOrderPartslistPosEntityType.CreateForeignKey8(prodOrderPartslistPos, material);
            ProdOrderPartslistPosEntityType.CreateForeignKey9(prodOrderPartslistPos, prodOrderPartslistPos);
            ProdOrderPartslistPosEntityType.CreateForeignKey10(prodOrderPartslistPos, prodOrderBatch);
            ProdOrderPartslistPosEntityType.CreateForeignKey11(prodOrderPartslistPos, prodOrderPartslist);
            ProdOrderPartslistPosEntityType.CreateForeignKey12(prodOrderPartslistPos, prodOrderPartslist);
            ProdOrderPartslistPosFacilityLotEntityType.CreateForeignKey1(prodOrderPartslistPosFacilityLot, facilityLot);
            ProdOrderPartslistPosFacilityLotEntityType.CreateForeignKey2(prodOrderPartslistPosFacilityLot, prodOrderPartslistPos);
            ProdOrderPartslistPosRelationEntityType.CreateForeignKey1(prodOrderPartslistPosRelation, mDProdOrderPartslistPosState);
            ProdOrderPartslistPosRelationEntityType.CreateForeignKey2(prodOrderPartslistPosRelation, mDToleranceState);
            ProdOrderPartslistPosRelationEntityType.CreateForeignKey3(prodOrderPartslistPosRelation, prodOrderPartslistPosRelation);
            ProdOrderPartslistPosRelationEntityType.CreateForeignKey4(prodOrderPartslistPosRelation, prodOrderBatch);
            ProdOrderPartslistPosRelationEntityType.CreateForeignKey5(prodOrderPartslistPosRelation, prodOrderPartslistPos);
            ProdOrderPartslistPosRelationEntityType.CreateForeignKey6(prodOrderPartslistPosRelation, prodOrderPartslistPos);
            ProdOrderPartslistPosSplitEntityType.CreateForeignKey1(prodOrderPartslistPosSplit, prodOrderPartslistPos);
            RatingEntityType.CreateForeignKey1(rating, company);
            RatingEntityType.CreateForeignKey2(rating, companyPerson);
            RatingEntityType.CreateForeignKey3(rating, deliveryNote);
            RatingComplaintEntityType.CreateForeignKey1(ratingComplaint, mDRatingComplaintType);
            RatingComplaintEntityType.CreateForeignKey2(ratingComplaint, rating);
            TandTv3FilterTrackingEntityType.CreateForeignKey1(tandTv3FilterTracking, tandTv3MDTrackingDirection);
            TandTv3FilterTrackingEntityType.CreateForeignKey2(tandTv3FilterTracking, tandTv3MDTrackingStartItemType);
            TandTv3FilterTrackingMaterialEntityType.CreateForeignKey1(tandTv3FilterTrackingMaterial, material);
            TandTv3FilterTrackingMaterialEntityType.CreateForeignKey2(tandTv3FilterTrackingMaterial, tandTv3FilterTracking);
            TandTv3MixPointEntityType.CreateForeignKey1(tandTv3MixPoint, facilityLot);
            TandTv3MixPointEntityType.CreateForeignKey2(tandTv3MixPoint, material);
            TandTv3MixPointEntityType.CreateForeignKey3(tandTv3MixPoint, tandTv3Step);
            TandTv3MixPointDeliveryNotePosEntityType.CreateForeignKey1(tandTv3MixPointDeliveryNotePos, deliveryNotePos);
            TandTv3MixPointDeliveryNotePosEntityType.CreateForeignKey2(tandTv3MixPointDeliveryNotePos, tandTv3MixPoint);
            TandTv3MixPointFacilityEntityType.CreateForeignKey1(tandTv3MixPointFacility, facility);
            TandTv3MixPointFacilityEntityType.CreateForeignKey2(tandTv3MixPointFacility, tandTv3MDBookingDirection);
            TandTv3MixPointFacilityEntityType.CreateForeignKey3(tandTv3MixPointFacility, tandTv3MixPoint);
            TandTv3MixPointFacilityBookingChargeEntityType.CreateForeignKey1(tandTv3MixPointFacilityBookingCharge, facilityBookingCharge);
            TandTv3MixPointFacilityBookingChargeEntityType.CreateForeignKey2(tandTv3MixPointFacilityBookingCharge, tandTv3MixPoint);
            TandTv3MixPointFacilityLotEntityType.CreateForeignKey1(tandTv3MixPointFacilityLot, facilityLot);
            TandTv3MixPointFacilityLotEntityType.CreateForeignKey2(tandTv3MixPointFacilityLot, tandTv3MDBookingDirection);
            TandTv3MixPointFacilityLotEntityType.CreateForeignKey3(tandTv3MixPointFacilityLot, tandTv3MixPoint);
            TandTv3MixPointFacilityPreBookingEntityType.CreateForeignKey1(tandTv3MixPointFacilityPreBooking, facilityPreBooking);
            TandTv3MixPointFacilityPreBookingEntityType.CreateForeignKey2(tandTv3MixPointFacilityPreBooking, tandTv3MixPoint);
            TandTv3MixPointInOrderPosEntityType.CreateForeignKey1(tandTv3MixPointInOrderPos, inOrderPos);
            TandTv3MixPointInOrderPosEntityType.CreateForeignKey2(tandTv3MixPointInOrderPos, tandTv3MixPoint);
            TandTv3MixPointOutOrderPosEntityType.CreateForeignKey1(tandTv3MixPointOutOrderPos, outOrderPos);
            TandTv3MixPointOutOrderPosEntityType.CreateForeignKey2(tandTv3MixPointOutOrderPos, tandTv3MixPoint);
            TandTv3MixPointPickingPosEntityType.CreateForeignKey1(tandTv3MixPointPickingPos, pickingPos);
            TandTv3MixPointPickingPosEntityType.CreateForeignKey2(tandTv3MixPointPickingPos, tandTv3MixPoint);
            TandTv3MixPointProdOrderPartslistPosEntityType.CreateForeignKey1(tandTv3MixPointProdOrderPartslistPos, prodOrderPartslistPos);
            TandTv3MixPointProdOrderPartslistPosEntityType.CreateForeignKey2(tandTv3MixPointProdOrderPartslistPos, tandTv3MixPoint);
            TandTv3MixPointProdOrderPartslistPosRelationEntityType.CreateForeignKey1(tandTv3MixPointProdOrderPartslistPosRelation, prodOrderPartslistPosRelation);
            TandTv3MixPointProdOrderPartslistPosRelationEntityType.CreateForeignKey2(tandTv3MixPointProdOrderPartslistPosRelation, tandTv3MixPoint);
            TandTv3MixPointRelationEntityType.CreateForeignKey1(tandTv3MixPointRelation, tandTv3MixPoint);
            TandTv3MixPointRelationEntityType.CreateForeignKey2(tandTv3MixPointRelation, tandTv3MixPoint);
            TandTv3StepEntityType.CreateForeignKey1(tandTv3Step, tandTv3FilterTracking);
            TourplanEntityType.CreateForeignKey1(tourplan, company);
            TourplanEntityType.CreateForeignKey2(tourplan, mDTour);
            TourplanEntityType.CreateForeignKey3(tourplan, mDTourplanState);
            TourplanEntityType.CreateForeignKey4(tourplan, facility);
            TourplanEntityType.CreateForeignKey5(tourplan, facility);
            TourplanEntityType.CreateForeignKey6(tourplan, visitorVoucher);
            TourplanConfigEntityType.CreateForeignKey1(tourplanConfig, material);
            TourplanConfigEntityType.CreateForeignKey2(tourplanConfig, tourplanConfig);
            TourplanConfigEntityType.CreateForeignKey3(tourplanConfig, tourplan);
            TourplanConfigEntityType.CreateForeignKey4(tourplanConfig, aCClass);
            TourplanConfigEntityType.CreateForeignKey5(tourplanConfig, aCClassPropertyRelation);
            TourplanConfigEntityType.CreateForeignKey6(tourplanConfig, aCClass);
            TourplanPosEntityType.CreateForeignKey1(tourplanPos, companyAddress);
            TourplanPosEntityType.CreateForeignKey2(tourplanPos, companyAddressUnloadingpoint);
            TourplanPosEntityType.CreateForeignKey3(tourplanPos, company);
            TourplanPosEntityType.CreateForeignKey4(tourplanPos, mDTimeRange);
            TourplanPosEntityType.CreateForeignKey5(tourplanPos, mDTourplanPosState);
            TourplanPosEntityType.CreateForeignKey6(tourplanPos, tourplan);
            UserSettingsEntityType.CreateForeignKey1(userSettings, companyAddress);
            UserSettingsEntityType.CreateForeignKey2(userSettings, companyPerson);
            UserSettingsEntityType.CreateForeignKey3(userSettings, company);
            UserSettingsEntityType.CreateForeignKey4(userSettings, vBUser);
            VBConfigEntityType.CreateForeignKey1(vBConfig, aCClass);
            VBConfigEntityType.CreateForeignKey2(vBConfig, aCClassPropertyRelation);
            VBConfigEntityType.CreateForeignKey3(vBConfig, vBConfig);
            VBConfigEntityType.CreateForeignKey4(vBConfig, aCClass);
            VBGroupRightEntityType.CreateForeignKey1(vBGroupRight, aCClassDesign);
            VBGroupRightEntityType.CreateForeignKey2(vBGroupRight, aCClass);
            VBGroupRightEntityType.CreateForeignKey3(vBGroupRight, aCClassMethod);
            VBGroupRightEntityType.CreateForeignKey4(vBGroupRight, aCClassProperty);
            VBGroupRightEntityType.CreateForeignKey5(vBGroupRight, vBGroup);
            VBUserEntityType.CreateForeignKey1(vBUser, aCClassDesign);
            VBUserEntityType.CreateForeignKey2(vBUser, vBLanguage);
            VBUserACClassDesignEntityType.CreateForeignKey1(vBUserACClassDesign, aCClassDesign);
            VBUserACClassDesignEntityType.CreateForeignKey2(vBUserACClassDesign, vBUser);
            VBUserACProjectEntityType.CreateForeignKey1(vBUserACProject, aCProject);
            VBUserACProjectEntityType.CreateForeignKey2(vBUserACProject, vBUser);
            VBUserGroupEntityType.CreateForeignKey1(vBUserGroup, vBGroup);
            VBUserGroupEntityType.CreateForeignKey2(vBUserGroup, vBUser);
            VBUserInstanceEntityType.CreateForeignKey1(vBUserInstance, vBUser);
            VisitorEntityType.CreateForeignKey1(visitor, mDVisitorCard);
            VisitorEntityType.CreateForeignKey2(visitor, material);
            VisitorEntityType.CreateForeignKey3(visitor, facility);
            VisitorEntityType.CreateForeignKey4(visitor, facility);
            VisitorEntityType.CreateForeignKey5(visitor, company);
            VisitorEntityType.CreateForeignKey6(visitor, company);
            VisitorEntityType.CreateForeignKey7(visitor, companyPerson);
            VisitorVoucherEntityType.CreateForeignKey1(visitorVoucher, mDVisitorCard);
            VisitorVoucherEntityType.CreateForeignKey2(visitorVoucher, mDVisitorVoucherState);
            VisitorVoucherEntityType.CreateForeignKey3(visitorVoucher, facility);
            VisitorVoucherEntityType.CreateForeignKey4(visitorVoucher, facility);
            VisitorVoucherEntityType.CreateForeignKey5(visitorVoucher, company);
            VisitorVoucherEntityType.CreateForeignKey6(visitorVoucher, companyPerson);
            VisitorVoucherEntityType.CreateForeignKey7(visitorVoucher, visitor);
            WeighingEntityType.CreateForeignKey1(weighing, inOrderPos);
            WeighingEntityType.CreateForeignKey2(weighing, labOrderPos);
            WeighingEntityType.CreateForeignKey3(weighing, outOrderPos);
            WeighingEntityType.CreateForeignKey4(weighing, pickingPos);
            WeighingEntityType.CreateForeignKey5(weighing, visitorVoucher);

            ACAssemblyEntityType.CreateAnnotations(aCAssembly);
            ACChangeLogEntityType.CreateAnnotations(aCChangeLog);
            ACClassEntityType.CreateAnnotations(aCClass);
            ACClassConfigEntityType.CreateAnnotations(aCClassConfig);
            ACClassDesignEntityType.CreateAnnotations(aCClassDesign);
            ACClassMessageEntityType.CreateAnnotations(aCClassMessage);
            ACClassMethodEntityType.CreateAnnotations(aCClassMethod);
            ACClassMethodConfigEntityType.CreateAnnotations(aCClassMethodConfig);
            ACClassPropertyEntityType.CreateAnnotations(aCClassProperty);
            ACClassPropertyRelationEntityType.CreateAnnotations(aCClassPropertyRelation);
            ACClassRouteUsageEntityType.CreateAnnotations(aCClassRouteUsage);
            ACClassRouteUsageGroupEntityType.CreateAnnotations(aCClassRouteUsageGroup);
            ACClassRouteUsagePosEntityType.CreateAnnotations(aCClassRouteUsagePos);
            ACClassTaskEntityType.CreateAnnotations(aCClassTask);
            ACClassTaskValueEntityType.CreateAnnotations(aCClassTaskValue);
            ACClassTaskValuePosEntityType.CreateAnnotations(aCClassTaskValuePos);
            ACClassTextEntityType.CreateAnnotations(aCClassText);
            ACClassWFEntityType.CreateAnnotations(aCClassWF);
            ACClassWFEdgeEntityType.CreateAnnotations(aCClassWFEdge);
            ACPackageEntityType.CreateAnnotations(aCPackage);
            ACProgramEntityType.CreateAnnotations(aCProgram);
            ACProgramConfigEntityType.CreateAnnotations(aCProgramConfig);
            ACProgramLogEntityType.CreateAnnotations(aCProgramLog);
            ACProgramLogPropertyLogEntityType.CreateAnnotations(aCProgramLogPropertyLog);
            ACProgramLogTaskEntityType.CreateAnnotations(aCProgramLogTask);
            ACProgramLogViewEntityType.CreateAnnotations(aCProgramLogView);
            ACProjectEntityType.CreateAnnotations(aCProject);
            ACPropertyLogEntityType.CreateAnnotations(aCPropertyLog);
            ACPropertyLogRuleEntityType.CreateAnnotations(aCPropertyLogRule);
            CalendarEntityType.CreateAnnotations(calendar);
            CalendarHolidayEntityType.CreateAnnotations(calendarHoliday);
            CalendarShiftEntityType.CreateAnnotations(calendarShift);
            CalendarShiftPersonEntityType.CreateAnnotations(calendarShiftPerson);
            CompanyEntityType.CreateAnnotations(company);
            CompanyAddressEntityType.CreateAnnotations(companyAddress);
            CompanyAddressDepartmentEntityType.CreateAnnotations(companyAddressDepartment);
            CompanyAddressUnloadingpointEntityType.CreateAnnotations(companyAddressUnloadingpoint);
            CompanyMaterialEntityType.CreateAnnotations(companyMaterial);
            CompanyMaterialHistoryEntityType.CreateAnnotations(companyMaterialHistory);
            CompanyMaterialPickupEntityType.CreateAnnotations(companyMaterialPickup);
            CompanyMaterialStockEntityType.CreateAnnotations(companyMaterialStock);
            CompanyPersonEntityType.CreateAnnotations(companyPerson);
            CompanyPersonRoleEntityType.CreateAnnotations(companyPersonRole);
            DeliveryNoteEntityType.CreateAnnotations(deliveryNote);
            DeliveryNotePosEntityType.CreateAnnotations(deliveryNotePos);
            DemandOrderEntityType.CreateAnnotations(demandOrder);
            DemandOrderPosEntityType.CreateAnnotations(demandOrderPos);
            DemandPrimaryEntityType.CreateAnnotations(demandPrimary);
            DemandProdOrderEntityType.CreateAnnotations(demandProdOrder);
            FacilityEntityType.CreateAnnotations(facility);
            FacilityBookingEntityType.CreateAnnotations(facilityBooking);
            FacilityBookingChargeEntityType.CreateAnnotations(facilityBookingCharge);
            FacilityChargeEntityType.CreateAnnotations(facilityCharge);
            FacilityHistoryEntityType.CreateAnnotations(facilityHistory);
            FacilityInventoryEntityType.CreateAnnotations(facilityInventory);
            FacilityInventoryPosEntityType.CreateAnnotations(facilityInventoryPos);
            FacilityLotEntityType.CreateAnnotations(facilityLot);
            FacilityLotStockEntityType.CreateAnnotations(facilityLotStock);
            FacilityMDSchedulingGroupEntityType.CreateAnnotations(facilityMDSchedulingGroup);
            FacilityMaterialEntityType.CreateAnnotations(facilityMaterial);
            FacilityMaterialOEEEntityType.CreateAnnotations(facilityMaterialOEE);
            FacilityPreBookingEntityType.CreateAnnotations(facilityPreBooking);
            FacilityReservationEntityType.CreateAnnotations(facilityReservation);
            FacilityStockEntityType.CreateAnnotations(facilityStock);
            HistoryEntityType.CreateAnnotations(history);
            HistoryConfigEntityType.CreateAnnotations(historyConfig);
            InOrderEntityType.CreateAnnotations(inOrder);
            InOrderConfigEntityType.CreateAnnotations(inOrderConfig);
            InOrderPosEntityType.CreateAnnotations(inOrderPos);
            InOrderPosSplitEntityType.CreateAnnotations(inOrderPosSplit);
            InRequestEntityType.CreateAnnotations(inRequest);
            InRequestConfigEntityType.CreateAnnotations(inRequestConfig);
            InRequestPosEntityType.CreateAnnotations(inRequestPos);
            InvoiceEntityType.CreateAnnotations(invoice);
            InvoicePosEntityType.CreateAnnotations(invoicePos);
            JobTableRecalcActualQuantityEntityType.CreateAnnotations(jobTableRecalcActualQuantity);
            LabOrderEntityType.CreateAnnotations(labOrder);
            LabOrderPosEntityType.CreateAnnotations(labOrderPos);
            LabelEntityType.CreateAnnotations(label);
            LabelTranslationEntityType.CreateAnnotations(labelTranslation);
            MDBalancingModeEntityType.CreateAnnotations(mDBalancingMode);
            MDBatchPlanGroupEntityType.CreateAnnotations(mDBatchPlanGroup);
            MDBookingNotAvailableModeEntityType.CreateAnnotations(mDBookingNotAvailableMode);
            MDCostCenterEntityType.CreateAnnotations(mDCostCenter);
            MDCountryEntityType.CreateAnnotations(mDCountry);
            MDCountryLandEntityType.CreateAnnotations(mDCountryLand);
            MDCountrySalesTaxEntityType.CreateAnnotations(mDCountrySalesTax);
            MDCountrySalesTaxMDMaterialGroupEntityType.CreateAnnotations(mDCountrySalesTaxMDMaterialGroup);
            MDCountrySalesTaxMaterialEntityType.CreateAnnotations(mDCountrySalesTaxMaterial);
            MDCurrencyEntityType.CreateAnnotations(mDCurrency);
            MDCurrencyExchangeEntityType.CreateAnnotations(mDCurrencyExchange);
            MDDelivNoteStateEntityType.CreateAnnotations(mDDelivNoteState);
            MDDelivPosLoadStateEntityType.CreateAnnotations(mDDelivPosLoadState);
            MDDelivPosStateEntityType.CreateAnnotations(mDDelivPosState);
            MDDelivTypeEntityType.CreateAnnotations(mDDelivType);
            MDDemandOrderStateEntityType.CreateAnnotations(mDDemandOrderState);
            MDFacilityInventoryPosStateEntityType.CreateAnnotations(mDFacilityInventoryPosState);
            MDFacilityInventoryStateEntityType.CreateAnnotations(mDFacilityInventoryState);
            MDFacilityManagementTypeEntityType.CreateAnnotations(mDFacilityManagementType);
            MDFacilityTypeEntityType.CreateAnnotations(mDFacilityType);
            MDFacilityVehicleTypeEntityType.CreateAnnotations(mDFacilityVehicleType);
            MDGMPAdditiveEntityType.CreateAnnotations(mDGMPAdditive);
            MDGMPMaterialGroupEntityType.CreateAnnotations(mDGMPMaterialGroup);
            MDGMPMaterialGroupPosEntityType.CreateAnnotations(mDGMPMaterialGroupPos);
            MDInOrderPosStateEntityType.CreateAnnotations(mDInOrderPosState);
            MDInOrderStateEntityType.CreateAnnotations(mDInOrderState);
            MDInOrderTypeEntityType.CreateAnnotations(mDInOrderType);
            MDInRequestStateEntityType.CreateAnnotations(mDInRequestState);
            MDInventoryManagementTypeEntityType.CreateAnnotations(mDInventoryManagementType);
            MDInvoiceStateEntityType.CreateAnnotations(mDInvoiceState);
            MDInvoiceTypeEntityType.CreateAnnotations(mDInvoiceType);
            MDLabOrderPosStateEntityType.CreateAnnotations(mDLabOrderPosState);
            MDLabOrderStateEntityType.CreateAnnotations(mDLabOrderState);
            MDLabTagEntityType.CreateAnnotations(mDLabTag);
            MDMaintModeEntityType.CreateAnnotations(mDMaintMode);
            MDMaintOrderPropertyStateEntityType.CreateAnnotations(mDMaintOrderPropertyState);
            MDMaintOrderStateEntityType.CreateAnnotations(mDMaintOrderState);
            MDMaintTaskStateEntityType.CreateAnnotations(mDMaintTaskState);
            MDMaterialGroupEntityType.CreateAnnotations(mDMaterialGroup);
            MDMaterialTypeEntityType.CreateAnnotations(mDMaterialType);
            MDMovementReasonEntityType.CreateAnnotations(mDMovementReason);
            MDOutOfferStateEntityType.CreateAnnotations(mDOutOfferState);
            MDOutOrderPlanStateEntityType.CreateAnnotations(mDOutOrderPlanState);
            MDOutOrderPosStateEntityType.CreateAnnotations(mDOutOrderPosState);
            MDOutOrderStateEntityType.CreateAnnotations(mDOutOrderState);
            MDOutOrderTypeEntityType.CreateAnnotations(mDOutOrderType);
            MDPickingTypeEntityType.CreateAnnotations(mDPickingType);
            MDProcessErrorActionEntityType.CreateAnnotations(mDProcessErrorAction);
            MDProdOrderPartslistPosStateEntityType.CreateAnnotations(mDProdOrderPartslistPosState);
            MDProdOrderStateEntityType.CreateAnnotations(mDProdOrderState);
            MDRatingComplaintTypeEntityType.CreateAnnotations(mDRatingComplaintType);
            MDReleaseStateEntityType.CreateAnnotations(mDReleaseState);
            MDReservationModeEntityType.CreateAnnotations(mDReservationMode);
            MDSchedulingGroupEntityType.CreateAnnotations(mDSchedulingGroup);
            MDSchedulingGroupWFEntityType.CreateAnnotations(mDSchedulingGroupWF);
            MDTermOfPaymentEntityType.CreateAnnotations(mDTermOfPayment);
            MDTimeRangeEntityType.CreateAnnotations(mDTimeRange);
            MDToleranceStateEntityType.CreateAnnotations(mDToleranceState);
            MDTourEntityType.CreateAnnotations(mDTour);
            MDTourplanPosStateEntityType.CreateAnnotations(mDTourplanPosState);
            MDTourplanStateEntityType.CreateAnnotations(mDTourplanState);
            MDTransportModeEntityType.CreateAnnotations(mDTransportMode);
            MDUnitEntityType.CreateAnnotations(mDUnit);
            MDUnitConversionEntityType.CreateAnnotations(mDUnitConversion);
            MDVisitorCardEntityType.CreateAnnotations(mDVisitorCard);
            MDVisitorCardStateEntityType.CreateAnnotations(mDVisitorCardState);
            MDVisitorVoucherStateEntityType.CreateAnnotations(mDVisitorVoucherState);
            MDZeroStockStateEntityType.CreateAnnotations(mDZeroStockState);
            MachineMaterialPosViewEntityType.CreateAnnotations(machineMaterialPosView);
            MachineMaterialRelViewEntityType.CreateAnnotations(machineMaterialRelView);
            MachineMaterialViewEntityType.CreateAnnotations(machineMaterialView);
            MaintACClassEntityType.CreateAnnotations(maintACClass);
            MaintACClassPropertyEntityType.CreateAnnotations(maintACClassProperty);
            MaintOrderEntityType.CreateAnnotations(maintOrder);
            MaintOrderAssignmentEntityType.CreateAnnotations(maintOrderAssignment);
            MaintOrderPosEntityType.CreateAnnotations(maintOrderPos);
            MaintOrderPropertyEntityType.CreateAnnotations(maintOrderProperty);
            MaintOrderTaskEntityType.CreateAnnotations(maintOrderTask);
            MaterialEntityType.CreateAnnotations(material);
            MaterialCalculationEntityType.CreateAnnotations(materialCalculation);
            MaterialConfigEntityType.CreateAnnotations(materialConfig);
            MaterialGMPAdditiveEntityType.CreateAnnotations(materialGMPAdditive);
            MaterialHistoryEntityType.CreateAnnotations(materialHistory);
            MaterialStockEntityType.CreateAnnotations(materialStock);
            MaterialUnitEntityType.CreateAnnotations(materialUnit);
            MaterialWFEntityType.CreateAnnotations(materialWF);
            MaterialWFACClassMethodEntityType.CreateAnnotations(materialWFACClassMethod);
            MaterialWFACClassMethodConfigEntityType.CreateAnnotations(materialWFACClassMethodConfig);
            MaterialWFConnectionEntityType.CreateAnnotations(materialWFConnection);
            MaterialWFRelationEntityType.CreateAnnotations(materialWFRelation);
            MsgAlarmLogEntityType.CreateAnnotations(msgAlarmLog);
            OperationLogEntityType.CreateAnnotations(operationLog);
            OrderLogEntityType.CreateAnnotations(orderLog);
            OrderLogPosMachinesEntityType.CreateAnnotations(orderLogPosMachines);
            OrderLogPosViewEntityType.CreateAnnotations(orderLogPosView);
            OrderLogRelViewEntityType.CreateAnnotations(orderLogRelView);
            OutOfferEntityType.CreateAnnotations(outOffer);
            OutOfferConfigEntityType.CreateAnnotations(outOfferConfig);
            OutOfferPosEntityType.CreateAnnotations(outOfferPos);
            OutOrderEntityType.CreateAnnotations(outOrder);
            OutOrderConfigEntityType.CreateAnnotations(outOrderConfig);
            OutOrderPosEntityType.CreateAnnotations(outOrderPos);
            OutOrderPosSplitEntityType.CreateAnnotations(outOrderPosSplit);
            OutOrderPosUtilizationEntityType.CreateAnnotations(outOrderPosUtilization);
            PartslistEntityType.CreateAnnotations(partslist);
            PartslistACClassMethodEntityType.CreateAnnotations(partslistACClassMethod);
            PartslistConfigEntityType.CreateAnnotations(partslistConfig);
            PartslistPosEntityType.CreateAnnotations(partslistPos);
            PartslistPosRelationEntityType.CreateAnnotations(partslistPosRelation);
            PartslistPosSplitEntityType.CreateAnnotations(partslistPosSplit);
            PartslistStockEntityType.CreateAnnotations(partslistStock);
            PickingEntityType.CreateAnnotations(picking);
            PickingConfigEntityType.CreateAnnotations(pickingConfig);
            PickingPosEntityType.CreateAnnotations(pickingPos);
            PickingPosProdOrderPartslistPosEntityType.CreateAnnotations(pickingPosProdOrderPartslistPos);
            PlanningMREntityType.CreateAnnotations(planningMR);
            PlanningMRConsEntityType.CreateAnnotations(planningMRCons);
            PlanningMRPosEntityType.CreateAnnotations(planningMRPos);
            PlanningMRProposalEntityType.CreateAnnotations(planningMRProposal);
            PriceListEntityType.CreateAnnotations(priceList);
            PriceListMaterialEntityType.CreateAnnotations(priceListMaterial);
            ProdOrderEntityType.CreateAnnotations(prodOrder);
            ProdOrderBatchEntityType.CreateAnnotations(prodOrderBatch);
            ProdOrderBatchPlanEntityType.CreateAnnotations(prodOrderBatchPlan);
            ProdOrderConnectionsDetailViewEntityType.CreateAnnotations(prodOrderConnectionsDetailView);
            ProdOrderConnectionsViewEntityType.CreateAnnotations(prodOrderConnectionsView);
            ProdOrderInwardsViewEntityType.CreateAnnotations(prodOrderInwardsView);
            ProdOrderOutwardsViewEntityType.CreateAnnotations(prodOrderOutwardsView);
            ProdOrderPartslistEntityType.CreateAnnotations(prodOrderPartslist);
            ProdOrderPartslistConfigEntityType.CreateAnnotations(prodOrderPartslistConfig);
            ProdOrderPartslistPosEntityType.CreateAnnotations(prodOrderPartslistPos);
            ProdOrderPartslistPosFacilityLotEntityType.CreateAnnotations(prodOrderPartslistPosFacilityLot);
            ProdOrderPartslistPosRelationEntityType.CreateAnnotations(prodOrderPartslistPosRelation);
            ProdOrderPartslistPosSplitEntityType.CreateAnnotations(prodOrderPartslistPosSplit);
            RatingEntityType.CreateAnnotations(rating);
            RatingComplaintEntityType.CreateAnnotations(ratingComplaint);
            TandTv3FilterTrackingEntityType.CreateAnnotations(tandTv3FilterTracking);
            TandTv3FilterTrackingMaterialEntityType.CreateAnnotations(tandTv3FilterTrackingMaterial);
            TandTv3MDBookingDirectionEntityType.CreateAnnotations(tandTv3MDBookingDirection);
            TandTv3MDTrackingDirectionEntityType.CreateAnnotations(tandTv3MDTrackingDirection);
            TandTv3MDTrackingStartItemTypeEntityType.CreateAnnotations(tandTv3MDTrackingStartItemType);
            TandTv3MixPointEntityType.CreateAnnotations(tandTv3MixPoint);
            TandTv3MixPointDeliveryNotePosEntityType.CreateAnnotations(tandTv3MixPointDeliveryNotePos);
            TandTv3MixPointFacilityEntityType.CreateAnnotations(tandTv3MixPointFacility);
            TandTv3MixPointFacilityBookingChargeEntityType.CreateAnnotations(tandTv3MixPointFacilityBookingCharge);
            TandTv3MixPointFacilityLotEntityType.CreateAnnotations(tandTv3MixPointFacilityLot);
            TandTv3MixPointFacilityPreBookingEntityType.CreateAnnotations(tandTv3MixPointFacilityPreBooking);
            TandTv3MixPointInOrderPosEntityType.CreateAnnotations(tandTv3MixPointInOrderPos);
            TandTv3MixPointOutOrderPosEntityType.CreateAnnotations(tandTv3MixPointOutOrderPos);
            TandTv3MixPointPickingPosEntityType.CreateAnnotations(tandTv3MixPointPickingPos);
            TandTv3MixPointProdOrderPartslistPosEntityType.CreateAnnotations(tandTv3MixPointProdOrderPartslistPos);
            TandTv3MixPointProdOrderPartslistPosRelationEntityType.CreateAnnotations(tandTv3MixPointProdOrderPartslistPosRelation);
            TandTv3MixPointRelationEntityType.CreateAnnotations(tandTv3MixPointRelation);
            TandTv3StepEntityType.CreateAnnotations(tandTv3Step);
            TourplanEntityType.CreateAnnotations(tourplan);
            TourplanConfigEntityType.CreateAnnotations(tourplanConfig);
            TourplanPosEntityType.CreateAnnotations(tourplanPos);
            UserSettingsEntityType.CreateAnnotations(userSettings);
            VBConfigEntityType.CreateAnnotations(vBConfig);
            VBGroupEntityType.CreateAnnotations(vBGroup);
            VBGroupRightEntityType.CreateAnnotations(vBGroupRight);
            VBLanguageEntityType.CreateAnnotations(vBLanguage);
            VBLicenseEntityType.CreateAnnotations(vBLicense);
            VBNoConfigurationEntityType.CreateAnnotations(vBNoConfiguration);
            VBSystemEntityType.CreateAnnotations(vBSystem);
            VBSystemColumnsEntityType.CreateAnnotations(vBSystemColumns);
            VBTranslationViewEntityType.CreateAnnotations(vBTranslationView);
            VBUserEntityType.CreateAnnotations(vBUser);
            VBUserACClassDesignEntityType.CreateAnnotations(vBUserACClassDesign);
            VBUserACProjectEntityType.CreateAnnotations(vBUserACProject);
            VBUserGroupEntityType.CreateAnnotations(vBUserGroup);
            VBUserInstanceEntityType.CreateAnnotations(vBUserInstance);
            VisitorEntityType.CreateAnnotations(visitor);
            VisitorVoucherEntityType.CreateAnnotations(visitorVoucher);
            WeighingEntityType.CreateAnnotations(weighing);

            AddAnnotation("ProductVersion", "9.0.9");
            AddAnnotation("Relational:MaxIdentifierLength", 128);
            AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
        }
    }
}
